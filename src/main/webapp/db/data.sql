--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Name: db_types2_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('db_types2_id_seq', 1, false);


--
-- Name: db_types_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('db_types_id_seq', 14, true);


--
-- Name: hosts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('hosts_id_seq', 12, true);


--
-- Name: schema_defs_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('schema_defs_id_seq', 55999, true);


--
-- Name: user_fiddles_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('user_fiddles_id_seq', 29600, true);


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('users_id_seq', 463, true);


--
-- Data for Name: db_types; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY db_types (id, full_name, simple_name, setup_script_template, jdbc_class_name, drop_script_template, custom_jdbc_attributes, batch_separator, notes, sample_fragment, execution_plan_prefix, execution_plan_suffix, execution_plan_xslt, context, execution_plan_check, is_latest_stable) FROM stdin;
4	Oracle 11g R2	Oracle	\ncreate user user_#databaseName# identified by "#databaseName#" default tablespace fiddledata profile fiddleusers\n/\ngrant create session, create synonym, create table, create type, create view, create procedure to user_#databaseName#\n/\nalter user user_#databaseName# quota 5M on fiddledata\n	oracle.jdbc.OracleDriver	DECLARE\n  l_cnt integer;\nBEGIN\n  EXECUTE IMMEDIATE 'alter user user_#databaseName# account lock';\n  FOR x IN (SELECT *\n              FROM v$session\n             WHERE username = 'USER_#databaseName#')\n  LOOP\n    EXECUTE IMMEDIATE 'alter system disconnect session ''' || x.sid || ',' || x.serial# || ''' IMMEDIATE';\n  END LOOP;\n\n  -- Wait for as long as it takes for all the sessions to go away\n  LOOP\n    SELECT COUNT(*)\n      INTO l_cnt\n      FROM v$session\n     WHERE username = 'USER_#databaseName#';\n    EXIT WHEN l_cnt = 0;\n    dbms_lock.sleep( 1 );\n  END LOOP;\n\n  EXECUTE IMMEDIATE 'drop user user_#databaseName# cascade';\nEND;\n	\N	/	Oracle does not support multiple statements in batch.  Separate each statement with a line consisting of a single /, and do not terminate statements with semicolons.	4/ee7da/596	\n\texplain plan set STATEMENT_ID = '#schema_short_code#/#query_id#' for \n	\n\n\n/\n\nselect dbms_xplan.display_plan(format=>'ALL', type=>'ACTIVE', statement_id => '#schema_short_code#/#query_id#') as XPLAN FROM dual	\n<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">\n<xsl:output method="html" indent="no" omit-xml-declaration="yes" cdata-section-elements="report_id info hint"/>\n\n<xsl:template match="/">\n  <script type="text/xml" class="oracle_xplan_xml">\n<xsl:copy-of select="/html/body/script[@type='text/xml']"/>\n  </script>\n  <div class="oracle_xplan"></div>\n</xsl:template>\n</xsl:stylesheet>\n	host	\N	1
7	SQLite (WebSQL)	SQLite	\N	websql	\N	\N	\N	\N	7/04eca/1	\N	\N	\N	browser	\N	1
5	SQLite (SQL.js)	SQLite	\nCREATE USER user_#databaseName# PASSWORD '#databaseName#'	sqljs	\N	\N	\N	\N	5/781d4/2	\N	\N	\N	browser	\N	1
6	MS SQL Server 2012	SQL Server	\nCREATE DATABASE db_#databaseName#;\nGO\n\nUSE db_#databaseName#;\nGO\n\nCREATE LOGIN user_#databaseName#\nWITH PASSWORD = '#databaseName#';\nGO\n\nCREATE USER user_#databaseName#;\nGO\n\nGRANT \nCREATE TABLE,\nCREATE TYPE,\nCREATE VIEW,\nCREATE PROCEDURE,\nCREATE FUNCTION,\nCREATE FULLTEXT CATALOG,\nEXECUTE,\nDELETE,\nINSERT,\nREFERENCES,\nSELECT,\nSHOWPLAN,\nUPDATE\nTO user_#databaseName#;\nGO\n\n\n\nALTER LOGIN user_#databaseName# WITH DEFAULT_DATABASE=db_#databaseName#;\nGO\n\nGRANT ALTER ON SCHEMA::dbo TO user_#databaseName#;\nGO\n\nuse master;\n\n	net.sourceforge.jtds.jdbc.Driver	exec dbo.clearDBUsers 'db_#databaseName#';\nGO\ndrop database db_#databaseName#;\nGO\ndrop login user_#databaseName#;\n	\N	GO	\N	6/189a3/1	\nSET SHOWPLAN_XML ON;\nGO\n	\nGO\nSET SHOWPLAN_XML OFF	\n<?xml version="1.0" encoding="utf-8"?>\n<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"\n  xmlns:msxsl="urn:schemas-microsoft-com:xslt"\n  xmlns:s="http://schemas.microsoft.com/sqlserver/2004/07/showplan"\n  exclude-result-prefixes="msxsl s xsl">\n  <xsl:output method="html" indent="no" omit-xml-declaration="yes" />\n\n  <!-- Disable built-in recursive processing templates -->\n  <xsl:template match="*|/|text()|@*" mode="NodeLabel2" />\n  <xsl:template match="*|/|text()|@*" mode="ToolTipDescription" />\n  <xsl:template match="*|/|text()|@*" mode="ToolTipDetails" />\n\n  <!-- Default template -->\n  <xsl:template match="/">\n    <xsl:apply-templates select="s:ShowPlanXML" />\n  </xsl:template>\n\n  <!-- Outermost div that contains all statement plans. -->\n  <xsl:template match="s:ShowPlanXML">\n    <div class="qp-root">\n      <xsl:apply-templates select="s:BatchSequence/s:Batch/s:Statements/s:StmtSimple" />  \n    </div>\n  </xsl:template>\n  \n  <!-- Matches a branch in the query plan (either an operation or a statement) -->\n  <xsl:template match="s:RelOp|s:StmtSimple">\n    <div class="qp-tr">\n      <div>\n        <div class="qp-node">\n          <xsl:apply-templates select="." mode="NodeIcon" />\n          <xsl:apply-templates select="." mode="NodeLabel" />\n          <xsl:apply-templates select="." mode="NodeLabel2" />\n          <xsl:apply-templates select="." mode="NodeCostLabel" />\n          <xsl:call-template name="ToolTip" />\n        </div>\n      </div>\n      <div><xsl:apply-templates select="*/s:RelOp" /></div>\n    </div>\n  </xsl:template>\n\n  <!-- Writes the tool tip -->\n  <xsl:template name="ToolTip">\n    <div class="qp-tt">\n      <div class="qp-tt-header"><xsl:value-of select="@PhysicalOp | @StatementType" /></div>\n      <div><xsl:apply-templates select="." mode="ToolTipDescription" /></div>\n      <xsl:call-template name="ToolTipGrid" />\n      <xsl:apply-templates select="* | @* | */* | */@*" mode="ToolTipDetails" />\n    </div>\n  </xsl:template>\n\n  <!-- Writes the grid of node properties to the tool tip -->\n  <xsl:template name="ToolTipGrid">\n    <table>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Condition" select="s:QueryPlan/@CachedPlanSize" />\n        <xsl:with-param name="Label">Cached plan size</xsl:with-param>\n        <xsl:with-param name="Value" select="concat(s:QueryPlan/@CachedPlanSize, ' B')" />\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Label">Physical Operation</xsl:with-param>\n        <xsl:with-param name="Value" select="@PhysicalOp" />\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Label">Logical Operation</xsl:with-param>\n        <xsl:with-param name="Value" select="@LogicalOp" />\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Label">Actual Number of Rows</xsl:with-param>\n        <xsl:with-param name="Value" select="s:RunTimeInformation/s:RunTimeCountersPerThread/@ActualRows" />\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Condition" select="@EstimateIO" />\n        <xsl:with-param name="Label">Estimated I/O Cost</xsl:with-param>\n        <xsl:with-param name="Value">\n          <xsl:call-template name="round">\n            <xsl:with-param name="value" select="@EstimateIO" />\n          </xsl:call-template>\n        </xsl:with-param>\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Condition" select="@EstimateCPU" />\n        <xsl:with-param name="Label">Estimated CPU Cost</xsl:with-param>\n        <xsl:with-param name="Value">\n          <xsl:call-template name="round">\n            <xsl:with-param name="value" select="@EstimateCPU" />\n          </xsl:call-template>\n        </xsl:with-param>\n      </xsl:call-template>\n      <!-- TODO: Estimated Number of Executions -->\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Label">Number of Executions</xsl:with-param>\n        <xsl:with-param name="Value" select="s:RunTimeInformation/s:RunTimeCountersPerThread/@ActualExecutions" />\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Label">Degree of Parallelism</xsl:with-param>\n        <xsl:with-param name="Value" select="s:QueryPlan/@DegreeOfParallelism" />\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Label">Memory Grant</xsl:with-param>\n        <xsl:with-param name="Value" select="s:QueryPlan/@MemoryGrant" />\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Condition" select="@EstimateIO | @EstimateCPU" />\n        <xsl:with-param name="Label">Estimated Operator Cost</xsl:with-param>\n        <xsl:with-param name="Value">\n          <xsl:variable name="EstimatedOperatorCost">\n            <xsl:call-template name="EstimatedOperatorCost" />\n          </xsl:variable>\n          <xsl:variable name="TotalCost">\n            <xsl:value-of select="ancestor::s:StmtSimple/@StatementSubTreeCost" />\n          </xsl:variable>\n          \n          <xsl:call-template name="round">\n            <xsl:with-param name="value" select="$EstimatedOperatorCost" />\n          </xsl:call-template>\n          (<xsl:value-of select="format-number(number($EstimatedOperatorCost) div number($TotalCost), '0%')" />)\n        </xsl:with-param>\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Condition" select="@StatementSubTreeCost | @EstimatedTotalSubtreeCost" />\n        <xsl:with-param name="Label">Estimated Subtree Cost</xsl:with-param>\n        <xsl:with-param name="Value">\n          <xsl:call-template name="round">\n            <xsl:with-param name="value" select="@StatementSubTreeCost | @EstimatedTotalSubtreeCost" />\n          </xsl:call-template>\n        </xsl:with-param>\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Label">Estimated Number of Rows</xsl:with-param>\n        <xsl:with-param name="Value" select="@StatementEstRows | @EstimateRows" />\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Condition" select="@AvgRowSize" />\n        <xsl:with-param name="Label">Estimated Row Size</xsl:with-param>\n        <xsl:with-param name="Value" select="concat(@AvgRowSize, ' B')" />\n      </xsl:call-template>\n      <!-- TODO: Actual Rebinds\n           TODO: Actual Rewinds -->\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Condition" select="s:IndexScan/@Ordered" />\n        <xsl:with-param name="Label">Ordered</xsl:with-param>\n        <xsl:with-param name="Value">\n          <xsl:choose>\n            <xsl:when test="s:IndexScan/@Ordered = 1">True</xsl:when>\n            <xsl:otherwise>False</xsl:otherwise>\n          </xsl:choose>\n        </xsl:with-param>\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Label">Node ID</xsl:with-param>\n        <xsl:with-param name="Value" select="@NodeId" />\n      </xsl:call-template>\n    </table>\n  </xsl:template>\n\n  <!-- Calculates the estimated operator cost. -->\n  <xsl:template name="EstimatedOperatorCost">\n    <xsl:variable name="EstimateIO">\n      <xsl:call-template name="convertSciToNumString">\n        <xsl:with-param name="inputVal" select="@EstimateIO" />\n      </xsl:call-template>\n    </xsl:variable>\n    <xsl:variable name="EstimateCPU">\n      <xsl:call-template name="convertSciToNumString">\n        <xsl:with-param name="inputVal" select="@EstimateCPU" />\n      </xsl:call-template>\n    </xsl:variable>\n    <xsl:value-of select="number($EstimateIO) + number($EstimateCPU)" />\n  </xsl:template>\n\n  <!-- Renders a row in the tool tip details table. -->\n  <xsl:template name="ToolTipRow">\n    <xsl:param name="Label" />\n    <xsl:param name="Value" />\n    <xsl:param name="Condition" select="$Value" />\n    <xsl:if test="$Condition">\n      <tr>\n        <th><xsl:value-of select="$Label" /></th>\n        <td><xsl:value-of select="$Value" /></td>\n      </tr>      \n    </xsl:if>\n  </xsl:template>\n\n  <!-- Prints the name of an object. -->\n  <xsl:template match="s:Object | s:ColumnReference" mode="ObjectName">\n    <xsl:param name="ExcludeDatabaseName" select="false()" />\n    <xsl:choose>\n      <xsl:when test="$ExcludeDatabaseName">\n        <xsl:for-each select="@Table | @Index | @Column | @Alias">\n          <xsl:value-of select="." />\n          <xsl:if test="position() != last()">.</xsl:if>\n        </xsl:for-each>\n      </xsl:when>\n      <xsl:otherwise>\n        <xsl:for-each select="@Database | @Schema | @Table | @Index | @Column | @Alias">\n          <xsl:value-of select="." />\n          <xsl:if test="position() != last()">.</xsl:if>\n        </xsl:for-each>\n      </xsl:otherwise>\n    </xsl:choose>\n  </xsl:template>\n\n  <!-- Displays the node cost label. -->\n  <xsl:template match="s:RelOp" mode="NodeCostLabel">\n    <xsl:variable name="EstimatedOperatorCost"><xsl:call-template name="EstimatedOperatorCost" /></xsl:variable>\n    <xsl:variable name="TotalCost"><xsl:value-of select="ancestor::s:StmtSimple/@StatementSubTreeCost" /></xsl:variable>\n    <div>Cost: <xsl:value-of select="format-number(number($EstimatedOperatorCost) div number($TotalCost), '0%')" /></div>\n  </xsl:template>\n\n  <!-- Dont show the node cost for statements. -->\n  <xsl:template match="s:StmtSimple" mode="NodeCostLabel" />\n\n  <!-- \n  ================================\n  Tool tip detail sections\n  ================================\n  The following section contains templates used for writing the detail sections at the bottom of the tool tip,\n  for example listing outputs, or information about the object to which an operator applies.\n  -->\n\n  <xsl:template match="*/s:Object" mode="ToolTipDetails">\n    <!-- TODO: Make sure this works all the time -->\n    <div class="qp-bold">Object</div>\n    <div><xsl:apply-templates select="." mode="ObjectName" /></div>\n  </xsl:template>\n\n  <xsl:template match="s:SetPredicate[s:ScalarOperator/@ScalarString]" mode="ToolTipDetails">\n    <div class="qp-bold">Predicate</div>\n    <div><xsl:value-of select="s:ScalarOperator/@ScalarString" /></div>\n  </xsl:template>\n\n  <xsl:template match="s:OutputList[count(s:ColumnReference) > 0]" mode="ToolTipDetails">\n    <div class="qp-bold">Output List</div>\n    <xsl:for-each select="s:ColumnReference">\n      <div><xsl:apply-templates select="." mode="ObjectName" /></div>\n    </xsl:for-each>\n  </xsl:template>\n\n  <xsl:template match="s:NestedLoops/s:OuterReferences[count(s:ColumnReference) > 0]" mode="ToolTipDetails">\n    <div class="qp-bold">Outer References</div>\n    <xsl:for-each select="s:ColumnReference">\n      <div><xsl:apply-templates select="." mode="ObjectName" /></div>\n    </xsl:for-each>\n  </xsl:template>\n\n  <xsl:template match="@StatementText" mode="ToolTipDetails">\n    <div class="qp-bold">Statement</div>\n    <div><xsl:value-of select="." /></div>\n  </xsl:template>\n\n  <xsl:template match="s:Sort/s:OrderBy[count(s:OrderByColumn/s:ColumnReference) > 0]" mode="ToolTipDetails">\n    <div class="qp-bold">Order By</div>\n    <xsl:for-each select="s:OrderByColumn">\n      <div>\n        <xsl:apply-templates select="s:ColumnReference" mode="ObjectName" />\n        <xsl:choose>\n          <xsl:when test="@Ascending = 1"> Ascending</xsl:when>\n          <xsl:otherwise> Descending</xsl:otherwise>\n        </xsl:choose>\n      </div>\n    </xsl:for-each>\n  </xsl:template>\n\n  <!-- TODO: Seek Predicates -->\n\n  <!-- \n  ================================\n  Node icons\n  ================================\n  The following templates determine what icon should be shown for a given node\n  -->\n\n  <!-- Use the logical operation to determine the icon for the "Parallelism" operators. -->\n  <xsl:template match="s:RelOp[@PhysicalOp = 'Parallelism']" mode="NodeIcon" priority="1">\n    <xsl:element name="div">\n      <xsl:attribute name="class">qp-icon-<xsl:value-of select="translate(@LogicalOp, ' ', '')" /></xsl:attribute>\n    </xsl:element>\n  </xsl:template>\n\n  <!-- Use the physical operation to determine icon if it is present. -->\n  <xsl:template match="*[@PhysicalOp]" mode="NodeIcon">\n    <xsl:element name="div">\n      <xsl:attribute name="class">qp-icon-<xsl:value-of select="translate(@PhysicalOp, ' ', '')" /></xsl:attribute>\n    </xsl:element>\n  </xsl:template>\n  \n  <!-- Matches all statements. -->\n  <xsl:template match="s:StmtSimple" mode="NodeIcon">\n    <div class="qp-icon-Statement"></div>\n  </xsl:template>\n\n  <!-- Fallback template - show the Bitmap icon. -->\n  <xsl:template match="*" mode="NodeIcon">\n    <div class="qp-icon-Catchall"></div>\n  </xsl:template>\n\n  <!-- \n  ================================\n  Node labels\n  ================================\n  The following section contains templates used to determine the first (main) label for a node.\n  -->\n\n  <xsl:template match="s:RelOp" mode="NodeLabel">\n    <div><xsl:value-of select="@PhysicalOp" /></div>\n  </xsl:template>\n\n  <xsl:template match="s:StmtSimple" mode="NodeLabel">\n    <div><xsl:value-of select="@StatementType" /></div>\n  </xsl:template>\n\n  <!--\n  ================================\n  Node alternate labels\n  ================================\n  The following section contains templates used to determine the second label to be displayed for a node.\n  -->\n\n  <!-- Display the object for any node that has one -->\n  <xsl:template match="*[*/s:Object]" mode="NodeLabel2">\n    <xsl:variable name="ObjectName">\n      <xsl:apply-templates select="*/s:Object" mode="ObjectName">\n        <xsl:with-param name="ExcludeDatabaseName" select="true()" />\n      </xsl:apply-templates>\n    </xsl:variable>\n    <div>\n      <xsl:value-of select="substring($ObjectName, 0, 36)" />\n      <xsl:if test="string-length($ObjectName) >= 36">…</xsl:if>\n    </div>\n  </xsl:template>\n\n  <!-- Display the logical operation for any node where it is not the same as the physical operation. -->\n  <xsl:template match="s:RelOp[@LogicalOp != @PhysicalOp]" mode="NodeLabel2">\n    <div>(<xsl:value-of select="@LogicalOp" />)</div>\n  </xsl:template>\n\n  <!-- Disable the default template -->\n  <xsl:template match="*" mode="NodeLabel2" />\n\n  <!-- \n  ================================\n  Tool tip descriptions\n  ================================\n  The following section contains templates used for writing the description shown in the tool tip.\n  -->\n\n  <xsl:template match="*[@PhysicalOp = 'Table Insert']" mode="ToolTipDescription">Insert input rows into the table specified in Argument field.</xsl:template>\n  <xsl:template match="*[@PhysicalOp = 'Compute Scalar']" mode="ToolTipDescription">Compute new values from existing values in a row.</xsl:template>\n  <xsl:template match="*[@PhysicalOp = 'Sort']" mode="ToolTipDescription">Sort the input.</xsl:template>\n  <xsl:template match="*[@PhysicalOp = 'Clustered Index Scan']" mode="ToolTipDescription">Scanning a clustered index, entirely or only a range.</xsl:template>\n  <xsl:template match="*[@PhysicalOp = 'Stream Aggregate']" mode="ToolTipDescription">Compute summary values for groups of rows in a suitably sorted stream.</xsl:template>\n  <xsl:template match="*[@PhysicalOp = 'Hash Match']" mode="ToolTipDescription">Use each row from the top input to build a hash table, and each row from the bottom input to probe into the hash table, outputting all matching rows.</xsl:template>\n  <xsl:template match="*[@PhysicalOp = 'Bitmap']" mode="ToolTipDescription">Bitmap.</xsl:template>\n  <xsl:template match="*[@PhysicalOp = 'Clustered Index Seek']" mode="ToolTipDescription">Scanning a particular range of rows from a clustered index.</xsl:template>\n  <xsl:template match="*[@PhysicalOp = 'Index Seek']" mode="ToolTipDescription">Scan a particular range of rows from a nonclustered index.</xsl:template>\n\n  <xsl:template match="*[@PhysicalOp = 'Parallelism' and @LogicalOp='Repartition Streams']" mode="ToolTipDescription">Repartition Streams.</xsl:template>\n  <xsl:template match="*[@PhysicalOp = 'Parallelism']" mode="ToolTipDescription">An operation involving parallelism.</xsl:template>\n  \n  <xsl:template match="*[s:TableScan]" mode="ToolTipDescription">Scan rows from a table.</xsl:template>\n  <xsl:template match="*[s:NestedLoops]" mode="ToolTipDescription">For each row in the top (outer) input, scan the bottom (inner) input, and output matching rows.</xsl:template>\n  <xsl:template match="*[s:Top]" mode="ToolTipDescription">Select the first few rows based on a sort order.</xsl:template>\n\n  <!-- \n  ================================\n  Number handling\n  ================================\n  The following section contains templates used for handling numbers (scientific notation, rounding etc...)\n  -->\n\n  <!-- Outputs a number rounded to 7 decimal places - to be used for displaying all numbers.\n  This template accepts numbers in scientific notation. -->\n  <xsl:template name="round">\n    <xsl:param name="value" select="0" />\n    <xsl:variable name="number">\n      <xsl:call-template name="convertSciToNumString">\n        <xsl:with-param name="inputVal" select="$value" />\n      </xsl:call-template>\n    </xsl:variable>\n    <xsl:value-of select="round(number($number) * 10000000) div 10000000" />\n  </xsl:template>\n  \n  <!-- Template for handling of scientific numbers\n  See: http://www.orm-designer.com/article/xslt-convert-scientific-notation-to-decimal-number -->\n  <xsl:variable name="max-exp">\n    <xsl:value-of select="'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'" />\n  </xsl:variable>\n\n  <xsl:template name="convertSciToNumString">\n    <xsl:param name="inputVal" select="0" />\n\n    <xsl:variable name="numInput">\n      <xsl:value-of select="translate(string($inputVal),'e','E')" />\n    </xsl:variable>\n\n    <xsl:choose>\n      <xsl:when test="number($numInput) = $numInput">\n        <xsl:value-of select="$numInput" />\n      </xsl:when> \n      <xsl:otherwise>\n        <!-- ==== Mantisa ==== -->\n        <xsl:variable name="numMantisa">\n          <xsl:value-of select="number(substring-before($numInput,'E'))" />\n        </xsl:variable>\n\n        <!-- ==== Exponent ==== -->\n        <xsl:variable name="numExponent">\n          <xsl:choose>\n            <xsl:when test="contains($numInput,'E+')">\n              <xsl:value-of select="substring-after($numInput,'E+')" />\n            </xsl:when>\n            <xsl:otherwise>\n              <xsl:value-of select="substring-after($numInput,'E')" />\n            </xsl:otherwise>\n          </xsl:choose>\n        </xsl:variable>\n\n        <!-- ==== Coefficient ==== -->\n        <xsl:variable name="numCoefficient">\n          <xsl:choose>\n            <xsl:when test="$numExponent > 0">\n              <xsl:text>1</xsl:text>\n              <xsl:value-of select="substring($max-exp, 1, number($numExponent))" />\n            </xsl:when>\n            <xsl:when test="$numExponent &lt; 0">\n              <xsl:text>0.</xsl:text>\n              <xsl:value-of select="substring($max-exp, 1, -number($numExponent)-1)" />\n              <xsl:text>1</xsl:text>\n            </xsl:when>\n            <xsl:otherwise>1</xsl:otherwise>\n          </xsl:choose>\n        </xsl:variable>\n        <xsl:value-of select="number($numCoefficient) * number($numMantisa)" />\n      </xsl:otherwise>\n    </xsl:choose>\n  </xsl:template>\n</xsl:stylesheet>\n	host	//*[@StatementType="COMMIT TRANSACTION"]	1
2	MySQL 5.5.27	MySQL	\nCREATE database db_#databaseName#  default CHARACTER SET = utf8 default COLLATE = utf8_general_ci;\nGRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,ALTER,INDEX,CREATE TEMPORARY TABLES,CREATE VIEW,SHOW VIEW,ALTER ROUTINE,CREATE ROUTINE,TRIGGER,EXECUTE\n ON db_#databaseName#.* TO user_#databaseName#@'%' IDENTIFIED BY '#databaseName#';\n	org.gjt.mm.mysql.Driver	\n DROP DATABASE db_#databaseName#; drop user user_#databaseName#@'%';\n	allowMultiQueries=true	\N	Separate multiple statements in MySQL by terminating each one with a semicolon.	2/a2581/1	explain extended 	\N	\N	host	\N	1
10	PostgreSQL 8.3.20	PostgreSQL	\nCREATE USER user_#databaseName# PASSWORD '#databaseName#';\nCREATE DATABASE db_#databaseName# OWNER user_#databaseName# ENCODING 'UTF8' TEMPLATE db_template;\n	org.postgresql.Driver	SELECT pg_terminate_backend(pg_stat_activity.procpid)                                     FROM pg_stat_activity                                                                                                                             WHERE upper(pg_stat_activity.datname) = 'DB_#databaseName#';                                                                                            DROP DATABASE db_#databaseName#;DROP USER user_#databaseName#;	\N	\N	\N	10/f9585/1	explain 	\N	\N	host	\N	0
11	PostgreSQL 8.4.12	PostgreSQL	\nCREATE USER user_#databaseName# PASSWORD '#databaseName#';\nCREATE DATABASE db_#databaseName# OWNER user_#databaseName# ENCODING 'UTF8' TEMPLATE db_template;\n	org.postgresql.Driver	SELECT pg_terminate_backend(pg_stat_activity.procpid)                                     FROM pg_stat_activity                                                                                                                             WHERE upper(pg_stat_activity.datname) = 'DB_#databaseName#';                                                                                            DROP DATABASE db_#databaseName#;DROP USER user_#databaseName#;	\N	\N	\N	11/6d80e/1	explain 	\N	\N	host	\N	0
3	MS SQL Server 2008	SQL Server	\nCREATE DATABASE db_#databaseName#;\nGO\n\nUSE db_#databaseName#;\nGO\n\nCREATE LOGIN user_#databaseName#\nWITH PASSWORD = '#databaseName#';\nGO\n\nCREATE USER user_#databaseName#;\nGO\n\nGRANT \nCREATE TABLE,\nCREATE TYPE,\nCREATE VIEW,\nCREATE PROCEDURE,\nCREATE FUNCTION,\nCREATE FULLTEXT CATALOG,\nEXECUTE,\nDELETE,\nINSERT,\nREFERENCES,\nSELECT,\nSHOWPLAN,\nUPDATE\nTO user_#databaseName#;\nGO\n\n\n\nALTER LOGIN user_#databaseName# WITH DEFAULT_DATABASE=db_#databaseName#;\nGO\n\nGRANT ALTER ON SCHEMA::dbo TO user_#databaseName#;\nGO\n\nuse master;\n\n	net.sourceforge.jtds.jdbc.Driver	exec dbo.clearDBUsers 'db_#databaseName#';\nGO\ndrop database db_#databaseName#;\nGO\ndrop login user_#databaseName#;\n	\N	GO	SQL Server supports multiple statements in a batch separated by semicolons. Separate statement batches with a line consisting of a single GO command, as needed.	3/1fa93/1	\nSET SHOWPLAN_XML ON;\nGO\n	\nGO\nSET SHOWPLAN_XML OFF	\n<?xml version="1.0" encoding="utf-8"?>\n<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"\n  xmlns:msxsl="urn:schemas-microsoft-com:xslt"\n  xmlns:s="http://schemas.microsoft.com/sqlserver/2004/07/showplan"\n  exclude-result-prefixes="msxsl s xsl">\n  <xsl:output method="html" indent="no" omit-xml-declaration="yes" />\n\n  <!-- Disable built-in recursive processing templates -->\n  <xsl:template match="*|/|text()|@*" mode="NodeLabel2" />\n  <xsl:template match="*|/|text()|@*" mode="ToolTipDescription" />\n  <xsl:template match="*|/|text()|@*" mode="ToolTipDetails" />\n\n  <!-- Default template -->\n  <xsl:template match="/">\n    <xsl:apply-templates select="s:ShowPlanXML" />\n  </xsl:template>\n\n  <!-- Outermost div that contains all statement plans. -->\n  <xsl:template match="s:ShowPlanXML">\n    <div class="qp-root">\n      <xsl:apply-templates select="s:BatchSequence/s:Batch/s:Statements/s:StmtSimple" />  \n    </div>\n  </xsl:template>\n  \n  <!-- Matches a branch in the query plan (either an operation or a statement) -->\n  <xsl:template match="s:RelOp|s:StmtSimple">\n    <div class="qp-tr">\n      <div>\n        <div class="qp-node">\n          <xsl:apply-templates select="." mode="NodeIcon" />\n          <xsl:apply-templates select="." mode="NodeLabel" />\n          <xsl:apply-templates select="." mode="NodeLabel2" />\n          <xsl:apply-templates select="." mode="NodeCostLabel" />\n          <xsl:call-template name="ToolTip" />\n        </div>\n      </div>\n      <div><xsl:apply-templates select="*/s:RelOp" /></div>\n    </div>\n  </xsl:template>\n\n  <!-- Writes the tool tip -->\n  <xsl:template name="ToolTip">\n    <div class="qp-tt">\n      <div class="qp-tt-header"><xsl:value-of select="@PhysicalOp | @StatementType" /></div>\n      <div><xsl:apply-templates select="." mode="ToolTipDescription" /></div>\n      <xsl:call-template name="ToolTipGrid" />\n      <xsl:apply-templates select="* | @* | */* | */@*" mode="ToolTipDetails" />\n    </div>\n  </xsl:template>\n\n  <!-- Writes the grid of node properties to the tool tip -->\n  <xsl:template name="ToolTipGrid">\n    <table>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Condition" select="s:QueryPlan/@CachedPlanSize" />\n        <xsl:with-param name="Label">Cached plan size</xsl:with-param>\n        <xsl:with-param name="Value" select="concat(s:QueryPlan/@CachedPlanSize, ' B')" />\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Label">Physical Operation</xsl:with-param>\n        <xsl:with-param name="Value" select="@PhysicalOp" />\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Label">Logical Operation</xsl:with-param>\n        <xsl:with-param name="Value" select="@LogicalOp" />\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Label">Actual Number of Rows</xsl:with-param>\n        <xsl:with-param name="Value" select="s:RunTimeInformation/s:RunTimeCountersPerThread/@ActualRows" />\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Condition" select="@EstimateIO" />\n        <xsl:with-param name="Label">Estimated I/O Cost</xsl:with-param>\n        <xsl:with-param name="Value">\n          <xsl:call-template name="round">\n            <xsl:with-param name="value" select="@EstimateIO" />\n          </xsl:call-template>\n        </xsl:with-param>\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Condition" select="@EstimateCPU" />\n        <xsl:with-param name="Label">Estimated CPU Cost</xsl:with-param>\n        <xsl:with-param name="Value">\n          <xsl:call-template name="round">\n            <xsl:with-param name="value" select="@EstimateCPU" />\n          </xsl:call-template>\n        </xsl:with-param>\n      </xsl:call-template>\n      <!-- TODO: Estimated Number of Executions -->\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Label">Number of Executions</xsl:with-param>\n        <xsl:with-param name="Value" select="s:RunTimeInformation/s:RunTimeCountersPerThread/@ActualExecutions" />\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Label">Degree of Parallelism</xsl:with-param>\n        <xsl:with-param name="Value" select="s:QueryPlan/@DegreeOfParallelism" />\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Label">Memory Grant</xsl:with-param>\n        <xsl:with-param name="Value" select="s:QueryPlan/@MemoryGrant" />\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Condition" select="@EstimateIO | @EstimateCPU" />\n        <xsl:with-param name="Label">Estimated Operator Cost</xsl:with-param>\n        <xsl:with-param name="Value">\n          <xsl:variable name="EstimatedOperatorCost">\n            <xsl:call-template name="EstimatedOperatorCost" />\n          </xsl:variable>\n          <xsl:variable name="TotalCost">\n            <xsl:value-of select="ancestor::s:StmtSimple/@StatementSubTreeCost" />\n          </xsl:variable>\n          \n          <xsl:call-template name="round">\n            <xsl:with-param name="value" select="$EstimatedOperatorCost" />\n          </xsl:call-template>\n          (<xsl:value-of select="format-number(number($EstimatedOperatorCost) div number($TotalCost), '0%')" />)\n        </xsl:with-param>\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Condition" select="@StatementSubTreeCost | @EstimatedTotalSubtreeCost" />\n        <xsl:with-param name="Label">Estimated Subtree Cost</xsl:with-param>\n        <xsl:with-param name="Value">\n          <xsl:call-template name="round">\n            <xsl:with-param name="value" select="@StatementSubTreeCost | @EstimatedTotalSubtreeCost" />\n          </xsl:call-template>\n        </xsl:with-param>\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Label">Estimated Number of Rows</xsl:with-param>\n        <xsl:with-param name="Value" select="@StatementEstRows | @EstimateRows" />\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Condition" select="@AvgRowSize" />\n        <xsl:with-param name="Label">Estimated Row Size</xsl:with-param>\n        <xsl:with-param name="Value" select="concat(@AvgRowSize, ' B')" />\n      </xsl:call-template>\n      <!-- TODO: Actual Rebinds\n           TODO: Actual Rewinds -->\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Condition" select="s:IndexScan/@Ordered" />\n        <xsl:with-param name="Label">Ordered</xsl:with-param>\n        <xsl:with-param name="Value">\n          <xsl:choose>\n            <xsl:when test="s:IndexScan/@Ordered = 1">True</xsl:when>\n            <xsl:otherwise>False</xsl:otherwise>\n          </xsl:choose>\n        </xsl:with-param>\n      </xsl:call-template>\n      <xsl:call-template name="ToolTipRow">\n        <xsl:with-param name="Label">Node ID</xsl:with-param>\n        <xsl:with-param name="Value" select="@NodeId" />\n      </xsl:call-template>\n    </table>\n  </xsl:template>\n\n  <!-- Calculates the estimated operator cost. -->\n  <xsl:template name="EstimatedOperatorCost">\n    <xsl:variable name="EstimateIO">\n      <xsl:call-template name="convertSciToNumString">\n        <xsl:with-param name="inputVal" select="@EstimateIO" />\n      </xsl:call-template>\n    </xsl:variable>\n    <xsl:variable name="EstimateCPU">\n      <xsl:call-template name="convertSciToNumString">\n        <xsl:with-param name="inputVal" select="@EstimateCPU" />\n      </xsl:call-template>\n    </xsl:variable>\n    <xsl:value-of select="number($EstimateIO) + number($EstimateCPU)" />\n  </xsl:template>\n\n  <!-- Renders a row in the tool tip details table. -->\n  <xsl:template name="ToolTipRow">\n    <xsl:param name="Label" />\n    <xsl:param name="Value" />\n    <xsl:param name="Condition" select="$Value" />\n    <xsl:if test="$Condition">\n      <tr>\n        <th><xsl:value-of select="$Label" /></th>\n        <td><xsl:value-of select="$Value" /></td>\n      </tr>      \n    </xsl:if>\n  </xsl:template>\n\n  <!-- Prints the name of an object. -->\n  <xsl:template match="s:Object | s:ColumnReference" mode="ObjectName">\n    <xsl:param name="ExcludeDatabaseName" select="false()" />\n    <xsl:choose>\n      <xsl:when test="$ExcludeDatabaseName">\n        <xsl:for-each select="@Table | @Index | @Column | @Alias">\n          <xsl:value-of select="." />\n          <xsl:if test="position() != last()">.</xsl:if>\n        </xsl:for-each>\n      </xsl:when>\n      <xsl:otherwise>\n        <xsl:for-each select="@Database | @Schema | @Table | @Index | @Column | @Alias">\n          <xsl:value-of select="." />\n          <xsl:if test="position() != last()">.</xsl:if>\n        </xsl:for-each>\n      </xsl:otherwise>\n    </xsl:choose>\n  </xsl:template>\n\n  <!-- Displays the node cost label. -->\n  <xsl:template match="s:RelOp" mode="NodeCostLabel">\n    <xsl:variable name="EstimatedOperatorCost"><xsl:call-template name="EstimatedOperatorCost" /></xsl:variable>\n    <xsl:variable name="TotalCost"><xsl:value-of select="ancestor::s:StmtSimple/@StatementSubTreeCost" /></xsl:variable>\n    <div>Cost: <xsl:value-of select="format-number(number($EstimatedOperatorCost) div number($TotalCost), '0%')" /></div>\n  </xsl:template>\n\n  <!-- Dont show the node cost for statements. -->\n  <xsl:template match="s:StmtSimple" mode="NodeCostLabel" />\n\n  <!-- \n  ================================\n  Tool tip detail sections\n  ================================\n  The following section contains templates used for writing the detail sections at the bottom of the tool tip,\n  for example listing outputs, or information about the object to which an operator applies.\n  -->\n\n  <xsl:template match="*/s:Object" mode="ToolTipDetails">\n    <!-- TODO: Make sure this works all the time -->\n    <div class="qp-bold">Object</div>\n    <div><xsl:apply-templates select="." mode="ObjectName" /></div>\n  </xsl:template>\n\n  <xsl:template match="s:SetPredicate[s:ScalarOperator/@ScalarString]" mode="ToolTipDetails">\n    <div class="qp-bold">Predicate</div>\n    <div><xsl:value-of select="s:ScalarOperator/@ScalarString" /></div>\n  </xsl:template>\n\n  <xsl:template match="s:OutputList[count(s:ColumnReference) > 0]" mode="ToolTipDetails">\n    <div class="qp-bold">Output List</div>\n    <xsl:for-each select="s:ColumnReference">\n      <div><xsl:apply-templates select="." mode="ObjectName" /></div>\n    </xsl:for-each>\n  </xsl:template>\n\n  <xsl:template match="s:NestedLoops/s:OuterReferences[count(s:ColumnReference) > 0]" mode="ToolTipDetails">\n    <div class="qp-bold">Outer References</div>\n    <xsl:for-each select="s:ColumnReference">\n      <div><xsl:apply-templates select="." mode="ObjectName" /></div>\n    </xsl:for-each>\n  </xsl:template>\n\n  <xsl:template match="@StatementText" mode="ToolTipDetails">\n    <div class="qp-bold">Statement</div>\n    <div><xsl:value-of select="." /></div>\n  </xsl:template>\n\n  <xsl:template match="s:Sort/s:OrderBy[count(s:OrderByColumn/s:ColumnReference) > 0]" mode="ToolTipDetails">\n    <div class="qp-bold">Order By</div>\n    <xsl:for-each select="s:OrderByColumn">\n      <div>\n        <xsl:apply-templates select="s:ColumnReference" mode="ObjectName" />\n        <xsl:choose>\n          <xsl:when test="@Ascending = 1"> Ascending</xsl:when>\n          <xsl:otherwise> Descending</xsl:otherwise>\n        </xsl:choose>\n      </div>\n    </xsl:for-each>\n  </xsl:template>\n\n  <!-- TODO: Seek Predicates -->\n\n  <!-- \n  ================================\n  Node icons\n  ================================\n  The following templates determine what icon should be shown for a given node\n  -->\n\n  <!-- Use the logical operation to determine the icon for the "Parallelism" operators. -->\n  <xsl:template match="s:RelOp[@PhysicalOp = 'Parallelism']" mode="NodeIcon" priority="1">\n    <xsl:element name="div">\n      <xsl:attribute name="class">qp-icon-<xsl:value-of select="translate(@LogicalOp, ' ', '')" /></xsl:attribute>\n    </xsl:element>\n  </xsl:template>\n\n  <!-- Use the physical operation to determine icon if it is present. -->\n  <xsl:template match="*[@PhysicalOp]" mode="NodeIcon">\n    <xsl:element name="div">\n      <xsl:attribute name="class">qp-icon-<xsl:value-of select="translate(@PhysicalOp, ' ', '')" /></xsl:attribute>\n    </xsl:element>\n  </xsl:template>\n  \n  <!-- Matches all statements. -->\n  <xsl:template match="s:StmtSimple" mode="NodeIcon">\n    <div class="qp-icon-Statement"></div>\n  </xsl:template>\n\n  <!-- Fallback template - show the Bitmap icon. -->\n  <xsl:template match="*" mode="NodeIcon">\n    <div class="qp-icon-Catchall"></div>\n  </xsl:template>\n\n  <!-- \n  ================================\n  Node labels\n  ================================\n  The following section contains templates used to determine the first (main) label for a node.\n  -->\n\n  <xsl:template match="s:RelOp" mode="NodeLabel">\n    <div><xsl:value-of select="@PhysicalOp" /></div>\n  </xsl:template>\n\n  <xsl:template match="s:StmtSimple" mode="NodeLabel">\n    <div><xsl:value-of select="@StatementType" /></div>\n  </xsl:template>\n\n  <!--\n  ================================\n  Node alternate labels\n  ================================\n  The following section contains templates used to determine the second label to be displayed for a node.\n  -->\n\n  <!-- Display the object for any node that has one -->\n  <xsl:template match="*[*/s:Object]" mode="NodeLabel2">\n    <xsl:variable name="ObjectName">\n      <xsl:apply-templates select="*/s:Object" mode="ObjectName">\n        <xsl:with-param name="ExcludeDatabaseName" select="true()" />\n      </xsl:apply-templates>\n    </xsl:variable>\n    <div>\n      <xsl:value-of select="substring($ObjectName, 0, 36)" />\n      <xsl:if test="string-length($ObjectName) >= 36">…</xsl:if>\n    </div>\n  </xsl:template>\n\n  <!-- Display the logical operation for any node where it is not the same as the physical operation. -->\n  <xsl:template match="s:RelOp[@LogicalOp != @PhysicalOp]" mode="NodeLabel2">\n    <div>(<xsl:value-of select="@LogicalOp" />)</div>\n  </xsl:template>\n\n  <!-- Disable the default template -->\n  <xsl:template match="*" mode="NodeLabel2" />\n\n  <!-- \n  ================================\n  Tool tip descriptions\n  ================================\n  The following section contains templates used for writing the description shown in the tool tip.\n  -->\n\n  <xsl:template match="*[@PhysicalOp = 'Table Insert']" mode="ToolTipDescription">Insert input rows into the table specified in Argument field.</xsl:template>\n  <xsl:template match="*[@PhysicalOp = 'Compute Scalar']" mode="ToolTipDescription">Compute new values from existing values in a row.</xsl:template>\n  <xsl:template match="*[@PhysicalOp = 'Sort']" mode="ToolTipDescription">Sort the input.</xsl:template>\n  <xsl:template match="*[@PhysicalOp = 'Clustered Index Scan']" mode="ToolTipDescription">Scanning a clustered index, entirely or only a range.</xsl:template>\n  <xsl:template match="*[@PhysicalOp = 'Stream Aggregate']" mode="ToolTipDescription">Compute summary values for groups of rows in a suitably sorted stream.</xsl:template>\n  <xsl:template match="*[@PhysicalOp = 'Hash Match']" mode="ToolTipDescription">Use each row from the top input to build a hash table, and each row from the bottom input to probe into the hash table, outputting all matching rows.</xsl:template>\n  <xsl:template match="*[@PhysicalOp = 'Bitmap']" mode="ToolTipDescription">Bitmap.</xsl:template>\n  <xsl:template match="*[@PhysicalOp = 'Clustered Index Seek']" mode="ToolTipDescription">Scanning a particular range of rows from a clustered index.</xsl:template>\n  <xsl:template match="*[@PhysicalOp = 'Index Seek']" mode="ToolTipDescription">Scan a particular range of rows from a nonclustered index.</xsl:template>\n\n  <xsl:template match="*[@PhysicalOp = 'Parallelism' and @LogicalOp='Repartition Streams']" mode="ToolTipDescription">Repartition Streams.</xsl:template>\n  <xsl:template match="*[@PhysicalOp = 'Parallelism']" mode="ToolTipDescription">An operation involving parallelism.</xsl:template>\n  \n  <xsl:template match="*[s:TableScan]" mode="ToolTipDescription">Scan rows from a table.</xsl:template>\n  <xsl:template match="*[s:NestedLoops]" mode="ToolTipDescription">For each row in the top (outer) input, scan the bottom (inner) input, and output matching rows.</xsl:template>\n  <xsl:template match="*[s:Top]" mode="ToolTipDescription">Select the first few rows based on a sort order.</xsl:template>\n\n  <!-- \n  ================================\n  Number handling\n  ================================\n  The following section contains templates used for handling numbers (scientific notation, rounding etc...)\n  -->\n\n  <!-- Outputs a number rounded to 7 decimal places - to be used for displaying all numbers.\n  This template accepts numbers in scientific notation. -->\n  <xsl:template name="round">\n    <xsl:param name="value" select="0" />\n    <xsl:variable name="number">\n      <xsl:call-template name="convertSciToNumString">\n        <xsl:with-param name="inputVal" select="$value" />\n      </xsl:call-template>\n    </xsl:variable>\n    <xsl:value-of select="round(number($number) * 10000000) div 10000000" />\n  </xsl:template>\n  \n  <!-- Template for handling of scientific numbers\n  See: http://www.orm-designer.com/article/xslt-convert-scientific-notation-to-decimal-number -->\n  <xsl:variable name="max-exp">\n    <xsl:value-of select="'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'" />\n  </xsl:variable>\n\n  <xsl:template name="convertSciToNumString">\n    <xsl:param name="inputVal" select="0" />\n\n    <xsl:variable name="numInput">\n      <xsl:value-of select="translate(string($inputVal),'e','E')" />\n    </xsl:variable>\n\n    <xsl:choose>\n      <xsl:when test="number($numInput) = $numInput">\n        <xsl:value-of select="$numInput" />\n      </xsl:when> \n      <xsl:otherwise>\n        <!-- ==== Mantisa ==== -->\n        <xsl:variable name="numMantisa">\n          <xsl:value-of select="number(substring-before($numInput,'E'))" />\n        </xsl:variable>\n\n        <!-- ==== Exponent ==== -->\n        <xsl:variable name="numExponent">\n          <xsl:choose>\n            <xsl:when test="contains($numInput,'E+')">\n              <xsl:value-of select="substring-after($numInput,'E+')" />\n            </xsl:when>\n            <xsl:otherwise>\n              <xsl:value-of select="substring-after($numInput,'E')" />\n            </xsl:otherwise>\n          </xsl:choose>\n        </xsl:variable>\n\n        <!-- ==== Coefficient ==== -->\n        <xsl:variable name="numCoefficient">\n          <xsl:choose>\n            <xsl:when test="$numExponent > 0">\n              <xsl:text>1</xsl:text>\n              <xsl:value-of select="substring($max-exp, 1, number($numExponent))" />\n            </xsl:when>\n            <xsl:when test="$numExponent &lt; 0">\n              <xsl:text>0.</xsl:text>\n              <xsl:value-of select="substring($max-exp, 1, -number($numExponent)-1)" />\n              <xsl:text>1</xsl:text>\n            </xsl:when>\n            <xsl:otherwise>1</xsl:otherwise>\n          </xsl:choose>\n        </xsl:variable>\n        <xsl:value-of select="number($numCoefficient) * number($numMantisa)" />\n      </xsl:otherwise>\n    </xsl:choose>\n  </xsl:template>\n</xsl:stylesheet>\n	host	//*[@StatementType="COMMIT TRANSACTION"]	0
8	MySQL 5.1.61	MySQL	\nCREATE database db_#databaseName#  default CHARACTER SET = utf8 default COLLATE = utf8_general_ci;\nGRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,ALTER,INDEX,CREATE TEMPORARY TABLES,CREATE VIEW,SHOW VIEW,ALTER ROUTINE,CREATE ROUTINE,TRIGGER,EXECUTE\n ON db_#databaseName#.* TO user_#databaseName#@'%' IDENTIFIED BY '#databaseName#';\n	org.gjt.mm.mysql.Driver	\n DROP DATABASE db_#databaseName#; drop user user_#databaseName#@'%';\n	\N	\N	\N	8/a2581/1	explain extended 	\N	\N	host	\N	0
9	MySQL 5.6.6 m9	MySQL	\nCREATE database db_#databaseName#  default CHARACTER SET = utf8 default COLLATE = utf8_general_ci;\nGRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,ALTER,INDEX,CREATE TEMPORARY TABLES,CREATE VIEW,SHOW VIEW,ALTER ROUTINE,CREATE ROUTINE,TRIGGER,EXECUTE\n ON db_#databaseName#.* TO user_#databaseName#@'%' IDENTIFIED BY '#databaseName#';\nGRANT SELECT ON performance_schema.* TO user_#databaseName#@'%';\n	org.gjt.mm.mysql.Driver	\n DROP DATABASE db_#databaseName#; drop user user_#databaseName#@'%';\n	\N	\N	\N	9/a2581/1	explain extended 	\N	\N	host	\N	0
1	PostgreSQL 9.1.6	PostgreSQL	\nCREATE USER user_#databaseName# PASSWORD '#databaseName#';\nCREATE DATABASE db_#databaseName# OWNER user_#databaseName# ENCODING 'UTF8' TEMPLATE db_template;\n	org.postgresql.Driver	SELECT pg_terminate_backend(pg_stat_activity.procpid)                                     FROM pg_stat_activity                                                                                                                             WHERE upper(pg_stat_activity.datname) = 'DB_#databaseName#';                                                                                            DROP DATABASE db_#databaseName#;DROP USER user_#databaseName#;	\N	\N	Separate multiple statements in PostgreSQL by terminating each one with a semicolon.	1/6ccc5/2	explain 	\N	\N	host	\N	1
12	PostgreSQL 9.2.1	PostgreSQL	\nCREATE USER user_#databaseName# PASSWORD '#databaseName#';\nCREATE DATABASE db_#databaseName# OWNER user_#databaseName# ENCODING 'UTF8' TEMPLATE db_template;\n	org.postgresql.Driver	SELECT pg_terminate_backend(pg_stat_activity.pid)                                     FROM pg_stat_activity                                                                                                                             WHERE upper(pg_stat_activity.datname) = 'DB_#databaseName#';                                                                                            DROP DATABASE db_#databaseName#;DROP USER user_#databaseName#;\n\t	\N	\N	\N	12/6d80e/1	explain 	\N	\N	host	\N	0
\.


--
-- Data for Name: hosts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY hosts (id, db_type_id, jdbc_url_template, cf_dsn) FROM stdin;
1	1	jdbc:postgresql://127.0.0.1:5432/#databaseName#	sqlfiddle_pg1
3	3	jdbc:jtds:sqlserver://sqlfiddlewin:1433/#databaseName#	sqlfiddle_mssql1
4	4	jdbc:oracle:thin:@//sqlfiddlewin:1521/xe	sqlfiddle_oracle1
5	6	jdbc:jtds:sqlserver://sqlfiddlewin:1434/#databaseName#	sqlfiddle_mssql2
2	2	jdbc:mysql://sqlfiddledb1:3306/#databaseName#?allowMultiQueries=true&useLocalTransactionState=true&useUnicode=true&characterEncoding=UTF-8	sqlfiddle_mysql1
8	10	jdbc:postgresql://pg83:2211/#databaseName#	sqlfiddle_pg83
9	11	jdbc:postgresql://pg84:2201/#databaseName#	sqlfiddle_pg84
10	12	jdbc:postgresql://pg92:2203/#databaseName#	sqlfiddle_pg92
11	9	jdbc:mysql://my56:2207/#databaseName#?allowMultiQueries=true&useLocalTransactionState=true&useUnicode=true&characterEncoding=UTF-8	sqlfiddle_my56
12	8	jdbc:mysql://my51:2205/#databaseName#?allowMultiQueries=true&useLocalTransactionState=true&useUnicode=true&characterEncoding=UTF-8	sqlfiddle_my51
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY users (id, identity, openid_server, auth_token, email, firstname, lastname) FROM stdin;
2	https://me.yahoo.com/a/FSAdWJwggoi05a4cZYcg.AIBJg--#d5c63	https://open.login.yahooapis.com/openid/op/auth	CEF69B05-8D4D-4B77-AB40CE84FC05AAFC	asjf11@yahoo.com	\N	\N
26	https://me.yahoo.com/a/jaoHnVQUjcVYteomn47RAwR5Q5nBmK_ONwaH6bm31WgXUVEn#9b3ce	https://open.login.yahooapis.com/openid/op/auth	A0FA41AE-55B9-4CCC-AE9CC886C3263F2A	kumarc28@rocketmail.com	\N	\N
27	https://www.google.com/accounts/o8/id?id=AItOawkSxOY6y7g_LeNTM_lQMzzQlVb48uT2Txg	https://www.google.com/accounts/o8/ud	A41E6E0C-2E0D-4D77-864BA85D27BAC7EF	polosate@gmail.com	Anastasiya	Shaposhnikova
5	https://www.google.com/accounts/o8/id?id=AItOawkkJ8Foq1VAPc4xSt2Rnv6K48I1KZ9RrcY	https://www.google.com/accounts/o8/ud	0762902E-C206-44B6-B3DFFA6676F0B230	swasheck@gmail.com	Seth	Washeck
28	https://www.google.com/accounts/o8/id?id=AItOawnZAYYuOJT0NDvskiTHG4cj2anPgv8abMo	https://www.google.com/accounts/o8/ud	EF6AA536-D913-46C8-9EACE644F3664529	mrileyaz@gmail.com	Matt	Riley
20	https://www.google.com/accounts/o8/id?id=AItOawkKIxq1tXM58gIIqj_qshvcXAxzeB74tUs	https://www.google.com/accounts/o8/ud	14FC6BB0-03E1-44F9-A310B0B9A9391CBD	rohnelasentista@gmail.com	rohnel	asentista
29	https://www.google.com/accounts/o8/id?id=AItOawmLW-X-yPwBJVyHbBQ6k4j4JpCBCSBJ6nk	https://www.google.com/accounts/o8/ud	2C1BFA7E-890B-4591-B646C456D7ED2F2A	nordin.rahman@gmail.com	Nordin	Rahman
36	https://www.google.com/accounts/o8/id?id=AItOawl0MYHrKY6Q2RlCR9UlV6yZKbTiNy8puV8	https://www.google.com/accounts/o8/ud	D1F89186-C37D-4FD8-A549299FE0201281	spencerpnhcc-google@yahoo.com	Peter	Spencer
7	https://www.google.com/accounts/o8/id?id=AItOawnLY2qfqkPh-gR7p_DVa0Y1YqtJaWLBms0	https://www.google.com/accounts/o8/ud	69E39732-8A41-40D0-8DDC78670D1A836A	gusdecool@gmail.com	Budi	Arsana
8	https://www.google.com/accounts/o8/id?id=AItOawn5M-nAeG5hJk9MJIsiJnvx2p-xj0R4Sfw	https://www.google.com/accounts/o8/ud	DAB5C549-B1DE-462D-9729305E19803216	kevintraver@gmail.com	Kevin	Traver
9	https://www.google.com/accounts/o8/id?id=AItOawnHYayn-HAswBaAoE3iXr3MA1_pd2ngSX0	https://www.google.com/accounts/o8/ud	F0774433-268B-45BC-A3821B97B9872E71	ankitsayss@gmail.com	Ankit	hates life
10	https://www.google.com/accounts/o8/id?id=AItOawnjYPHqBGuuMTg-JHMv2GPTnx8AoBCNsDk	https://www.google.com/accounts/o8/ud	18EAA1B1-61AD-407F-8B4277F6DBBDEC17	cbffr.cheng@gmail.com	carlos	cheng
12	https://www.google.com/accounts/o8/id?id=AItOawm_CdaiUgkjT4j5qtkIDF6lZEYluctFyt4	https://www.google.com/accounts/o8/ud	8126B4C4-4A21-455F-BE7F34AE03002B1C	tanangular@gmail.com	Thanathip	Tharavanich
13	http://sinepiskai4.myopenid.com/	http://www.myopenid.com/server	BA7AEBEB-3FA4-4047-8D283D93F287A844	\N	\N	\N
14	https://www.google.com/accounts/o8/id?id=AItOawlFAvCKxdWdTr7Hw2yIXSXOutNfsy7peaw	https://www.google.com/accounts/o8/ud	4C09D238-51C6-4DC1-ADAB81C979F9F61F	bharat.jain@gmail.com	Bharat	Jain
15	http://williamdurkin.wordpress.com/	http://williamdurkin.wordpress.com/?openidserver=1	21AAE481-654A-49F3-B9A8F650AF40332A	\N	\N	\N
16	https://www.google.com/accounts/o8/id?id=AItOawk7W3zp5eJEucrEuESRPOtlBgdmQ3sv1Uc	https://www.google.com/accounts/o8/ud	AABCD186-49EA-4B91-AEC624C12DCD18C3	nrpieper@gmail.com	Nathan	Pieper
3	http://openid.roux.org/cade	http://www.myopenid.com/server	F3CD37CC-C942-4D34-9EBCED18E7FBC95B	\N	\N	\N
17	https://www.google.com/accounts/o8/id?id=AItOawkKbUMJL0ftAtk8MaWA_7S8_7bXccVLpIw	https://www.google.com/accounts/o8/ud	770F1948-8CB2-4D26-9BAA0EBA673F4D96	werm82@gmail.com	Craig	Wermert
32	https://www.google.com/accounts/o8/id?id=AItOawk4cgULQ0ksHWtBjc8W1vtsvEaJxpdxlwo	https://www.google.com/accounts/o8/ud	9B4A5813-E421-4F44-86630F2D7FEDB073	awhisperedlie@gmail.com	Mike	Grabski
18	https://www.google.com/accounts/o8/id?id=AItOawkpfM6qghDpdo_RoDrXkNExa-FXjgncV0o	https://www.google.com/accounts/o8/ud	81C6AD5E-40E7-43A0-9F82D1116564D05D	cotter.daniel@gmail.com	Daniel	Cotter
19	http://claimid.com/isme	https://openid.claimid.com/server	83B9EAD2-E482-4C87-851F8D53AD32D669	\N	\N	\N
22	https://www.google.com/accounts/o8/id?id=AItOawkaYx5OQXvxIefX9x833RSoYDavgtnkRzg	https://www.google.com/accounts/o8/ud	FC91D93A-0E6D-49E4-A547A7FC694457DA	guthrie.m@gmail.com	Michael	Guthrie
24	https://me.yahoo.com/a/tBr2tMkbv8D4kcYTUXQbzYgqjOZp9w--#73770	https://open.login.yahooapis.com/openid/op/auth	48842410-299B-4100-B00194FDE1553009	mikee2988@yahoo.com	\N	\N
23	https://www.google.com/accounts/o8/id?id=AItOawnfQkaXlB34KBx4k4WrBDvDwEnxH-L9CQg	https://www.google.com/accounts/o8/ud	DAD7A596-F8E9-467C-815AAEA5473C728C	krishnendu.dey@gmail.com	Krish	Dey
30	https://www.google.com/accounts/o8/id?id=AItOawmnmwEL-VZZfMCiZ1klud76s3VdbTZLjDU	https://www.google.com/accounts/o8/ud	99ED6AB1-DD45-4B6E-883F502CCAFB6A9F	mubasshir.don@gmail.com	mubasshir	pawle
31	https://www.google.com/accounts/o8/id?id=AItOawlxO237BWUxBldo16FpgSaePtU9RWtxHzQ	https://www.google.com/accounts/o8/ud	31F0F139-79CF-42D5-AA24172A437A22F9	enamrik@gmail.com	Kirmanie	Ravariere
37	https://www.google.com/accounts/o8/id?id=AItOawmI_XNgjGDVpL_TqYwX0N1JqBqSs6KZDCM	https://www.google.com/accounts/o8/ud	CDB2E6CE-AA95-4137-BFAC4C74C986B416	smartin108@gmail.com	Andy	Holaday
34	https://www.google.com/accounts/o8/id?id=AItOawl5dQXEAcC9qtGpILV9aFbKKy7X9m-3g6Y	https://www.google.com/accounts/o8/ud	9293C09D-2735-4519-B0DF86BBF6488FD1	robertfolkerts@gmail.com	Robert	Folkerts
35	https://www.google.com/accounts/o8/id?id=AItOawk_wDI0qqXLAxRvnOF2EWGrILs9o5g-0nw	https://www.google.com/accounts/o8/ud	44E72096-494A-41D5-B812F92FD3B3A6FD	kvalero@gmail.com	Kamal	Valero
25	https://www.google.com/accounts/o8/id?id=AItOawl1UBlcoMegM3M3-JeSMhC7quJs5nJJZm8	https://www.google.com/accounts/o8/ud	2D018CC2-CA21-486C-A1193603660A5F6E	satindersinght@gmail.com	satinder	singh
4	https://www.google.com/accounts/o8/id?id=AItOawnu-LA8ariuQB0Y3ZhX9Fs9NDHrDILAa1o	https://www.google.com/accounts/o8/ud	59265BF5-3EFA-4697-9B30E7396C3694C7	blufeet@gmail.com	Taryn	Regish
33	https://www.google.com/accounts/o8/id?id=AItOawkYOFnX32kSajHUG08RQt_PcEr_rDFmLE0	https://www.google.com/accounts/o8/ud	160C7B9B-3EA7-49C5-819CDAA58084FE5C	leniel@gmail.com	Leniel	Macaferi
38	https://www.google.com/accounts/o8/id?id=AItOawm2ocKAeXZpyhfFrtTgJxB8VKxLpxmN56U	https://www.google.com/accounts/o8/ud	C40FD3A7-D94F-4C2A-995CD52AE6BAEE3A	1daylife@gmail.com	Rinat	Borovskikh
11	https://www.google.com/accounts/o8/id?id=AItOawmph1fM_zoPjyauxpqapod_6Q8UpPfm2pw	https://www.google.com/accounts/o8/ud	BDE14F15-2D9B-4E1E-8DFCFFFEF5FFCCC6	micke314@gmail.com	Mikael	Eriksson
405	https://me.yahoo.com/a/ywIho216mcaJQRu4Zc5ZE12vHA--#a468f	https://open.login.yahooapis.com/openid/op/auth	B50AA433-2776-42C8-A438649F8F4E68C9	tonyg3@yahoo.com	\N	\N
39	https://www.google.com/accounts/o8/id?id=AItOawnG1N1Bvd7_8v7MderX7_TpveGRR7xqP3E	https://www.google.com/accounts/o8/ud	51B2C03B-1820-455C-93DE86AF75675EAC	jhoguet@gmail.com	Jonathan	Hoguet
40	https://www.google.com/accounts/o8/id?id=AItOawnpsNXTRoZDJJ7PTA3Ez-gCw2XoOtmtuxA	https://www.google.com/accounts/o8/ud	2537EAE0-DD74-4E92-8C8CA6E165E7D42D	ivanovsuper@gmail.com	Yura	Ivanov
41	http://lazy-denis.myopenid.com/	http://www.myopenid.com/server	3BAE1517-2B32-4F6F-A09BD97CAD243DFF	\N	\N	\N
42	http://karthiknet.wordpress.com/	http://karthiknet.wordpress.com/?openidserver=1	B4802D38-DA31-4AFA-A513EAE8187CB486	\N	\N	\N
43	https://www.google.com/accounts/o8/id?id=AItOawkRRpI2AWR2ALq1dDVvgUOR-MyBWVopXm4	https://www.google.com/accounts/o8/ud	D1F36B29-CE29-489E-BE8319F4A34ADDEF	mygoogleacc@web.de	\N	\N
45	http://cybernate.myopenid.com/	http://www.myopenid.com/server	9C2CB0A7-A7E0-4A79-A32F2BE50BD84AC6	\N	\N	\N
46	https://www.google.com/accounts/o8/id?id=AItOawmK5nnR_SDvu_XAD0TwApp82oOv1RRLFlk	https://www.google.com/accounts/o8/ud	09FF244D-52C5-4686-B4E5351F66F3F8AC	svonwolf@gmail.com	Stefan	Willoughby
47	https://www.google.com/accounts/o8/id?id=AItOawkekYZOJcLTElfWkaOEdsbduRAwBlso-Ig	https://www.google.com/accounts/o8/ud	B9C34B11-44E8-4E18-A72AA2FBA6C2F3F1	dewaldf@gmail.com	Dewald	Fortier
48	https://www.google.com/accounts/o8/id?id=AItOawlkJrTccUkYew9-q4kt6liOFQ85sufmA5E	https://www.google.com/accounts/o8/ud	91315AD7-2A86-4503-88AD8A1A0D8B2386	tassadaque@gmail.com	Muhammad Tassadaque	Zia
49	https://www.google.com/accounts/o8/id?id=AItOawmlqN0l34dMmyCbD_URHIOB393x-uYHeDk	https://www.google.com/accounts/o8/ud	181E7C29-45A2-4B67-8E174A6502085E9A	gpetrioli@gmail.com	Gabriele	Petrioli
50	https://www.google.com/accounts/o8/id?id=AItOawkNHd6xC76gipaVhasFJfkT3GKcTT7HsRs	https://www.google.com/accounts/o8/ud	FB904870-E0CE-4EF9-BA5001FDFF99EDB7	mohapatra.dharmendra@gmail.com	Dharmendra	Mohapatra
51	https://www.google.com/accounts/o8/id?id=AItOawlG8G6uWSUl-u_Igq0aLGeJnCsUWdBzSdI	https://www.google.com/accounts/o8/ud	F4C713E6-FC83-4312-A00246F1A8E072EB	cdempsey321@gmail.com	Chris	Dempsey
52	https://www.google.com/accounts/o8/id?id=AItOawlP-URGXgSp06z2k2EtxqYk42GWLmGd9UI	https://www.google.com/accounts/o8/ud	576BE6FA-4C8A-4EBB-800EC9E0E9D610FB	apraveen87@gmail.com	Praveen	Kumar
54	https://www.google.com/accounts/o8/id?id=AItOawk6y05GCBttdNJWLX3tz3nFtH8KDsmpDOM	https://www.google.com/accounts/o8/ud	863CB8EF-836F-4698-9FBC3845E3CDF858	abclary@gmail.com	Andy	Clary
55	https://www.google.com/accounts/o8/id?id=AItOawlAtJydQSSpsxD_SFc6-uQhoHBBbs5TVw8	https://www.google.com/accounts/o8/ud	29E81033-177A-4A79-B3CA84B816ECA1AB	bijuyes1980@gmail.com	Biju	s
57	https://www.google.com/accounts/o8/id?id=AItOawn1a5Wo9YpA2XkTYizWhILEAvZ4APoOiJA	https://www.google.com/accounts/o8/ud	E3CC7D89-8A8B-4E7D-950D3628CEFE9C92	shpak.aleks@gmail.com	Alex	Shpak
58	https://www.google.com/accounts/o8/id?id=AItOawkDMjq9PIvwt27MZSOzV1zT2QfYystSqnY	https://www.google.com/accounts/o8/ud	51592C93-540B-4DA9-AE831531710CD102	garner.rachel@gmail.com	Rachel	Garner
59	https://me.yahoo.com/a/SVtLptULz9kDFRCh.a4GEzVTdoBIbhwHjfE-#62a9c	https://open.login.yahooapis.com/openid/op/auth	91C6571E-789B-47DE-9BD8FCDE28C88F91	parkarfahim22@yahoo.co.in	\N	\N
61	https://www.google.com/accounts/o8/id?id=AItOawmFFE1d_SsWU-vqniBLzY5g1sNwo3n4_n4	https://www.google.com/accounts/o8/ud	68D30B91-BB76-4DEB-B20E88D35FF2C70E	tmlsk8@gmail.com	Trevor	LeBlanc
60	https://www.google.com/accounts/o8/id?id=AItOawlyScvQdFEJwOKROXWMSgEV7Pd57sB-awA	https://www.google.com/accounts/o8/ud	DBCDFC7A-18F5-4EE7-9DAB47BF17E0443F	thibaut.barrere@gmail.com	Thibaut	Barrère
44	https://www.google.com/accounts/o8/id?id=AItOawm--JZp9P8byJMmAjhNFjoXE5Qygopst8U	https://www.google.com/accounts/o8/ud	AC18CDE5-2480-4DED-BA2E7021F29D40D0	smartin108@gmail.com	Andy	Holaday
67	https://coder389.myopenid.com/	https://www.myopenid.com/server	201AAB1D-AB70-4328-B67FF754E2D71623	\N	\N	\N
66	https://www.google.com/accounts/o8/id?id=AItOawmHvEJOnBL-HfV9scHwGh1TeRAULLGs8Co	https://www.google.com/accounts/o8/ud	06DBE69A-E7B8-46E4-A332F1F43417CC95	himanshujansari@gmail.com	Himanshu	Jansari
62	http://wolframx.myopenid.com/	http://www.myopenid.com/server	896C66A8-663B-4855-863E80BA8F3FECDE	\N	\N	\N
63	https://www.google.com/accounts/o8/id?id=AItOawkFqgiB1Bp8LynSi25nNr3G8PHRcdfQqzM	https://www.google.com/accounts/o8/ud	3BEFAB19-49F3-45A6-A28C4AF93BBCB0D0	pouyan.ghasemi@gmail.com	pouyan	ghasemi
64	https://www.google.com/accounts/o8/id?id=AItOawlpzpWOBmjCbzbp7fnTrD-fNhZwcb0SAQw	https://www.google.com/accounts/o8/ud	2391144C-1133-4DBA-97241EEBAD924D5F	okonomiyaki3000@gmail.com	Elijah	Madden
65	https://www.google.com/accounts/o8/id?id=AItOawm_yGkSDEPHcabHICFnaN-a3rlEs35UVq8	https://www.google.com/accounts/o8/ud	6F54C405-2CCF-4455-88E608ABE927B10D	support@suraj.co.in	Software	Support
68	https://www.google.com/accounts/o8/id?id=AItOawn-2kRSuEJRZkC7h-Pr8Dp4KMoGC56Q6r4	https://www.google.com/accounts/o8/ud	AE2AD85F-271C-44B1-B5E84FA6AE9289D9	gavrilak89@gmail.com	Dima	Soldatenko
69	https://www.google.com/accounts/o8/id?id=AItOawmOm9fhvDse92gBLDWf3bCxT9oJETq0v0M	https://www.google.com/accounts/o8/ud	06BEFA81-9071-429A-A4A2634AA11E5FEB	puggan@gmail.com	Puggan	Backlund
70	https://me.yahoo.com/a/u_q12wkspND_k8MnEmGEW1CQnzyhzFHs#590f3	https://open.login.yahooapis.com/openid/op/auth	A5213B47-10BC-4E2F-A932105A37F9F1E3	kumar960835@yahoo.com	\N	\N
71	https://www.google.com/accounts/o8/id?id=AItOawmqxoWGrPinwLwDhXB8I42ZinoczyvghuA	https://www.google.com/accounts/o8/ud	E30D6A4A-22B5-4D3A-B29A77A33EB7933F	mlancellotti@gmail.com	Mariano	Lancellotti
72	https://www.google.com/accounts/o8/id?id=AItOawn-PrZvhF6S8cLJ-UlSPvmj_FKztuKv3A8	https://www.google.com/accounts/o8/ud	BD09BCD3-4B6B-4FF2-BDDA88DB789C0CAA	create812@gmail.com	Ben	Johns
73	https://www.google.com/accounts/o8/id?id=AItOawmXA3O7gobM2QhVzTPHkyuQCCzvWBFH5_w	https://www.google.com/accounts/o8/ud	45319FCF-4025-4502-8B7EB13717AAF334	senthilkumar.me2006@gmail.com	Senthilkumar	Elangovan
74	https://www.google.com/accounts/o8/id?id=AItOawlCQeSp8fvY17Jl-mLOJ1HA0fLshBtflIE	https://www.google.com/accounts/o8/ud	0855157E-AFAB-4484-9E63DDD61D9A9F34	savingstrangers@gmail.com	Nick	Hand
53	https://www.google.com/accounts/o8/id?id=AItOawm6EGHp2EJTgdTeY0C80HAk8BqNPc_HiEc	https://www.google.com/accounts/o8/ud	809C587A-2E49-4194-85A84FAECB490939	michael.searcy@gmail.com	Mike	Searcy
56	http://diecho.myopenid.com/	http://www.myopenid.com/server	F96CA653-57B3-4B35-BFC63129A53CD5A6	\N	\N	\N
75	https://www.google.com/accounts/o8/id?id=AItOawmcPLb_DFhO6R4LM9OUti7aw_POXHOGjsk	https://www.google.com/accounts/o8/ud	4543C886-2ED0-4999-909CB512D7BECB4F	svetzal@gmail.com	Stacey	Vetzal
76	https://www.google.com/accounts/o8/id?id=AItOawmdsi7k03hIlvmHyv5FD3fPLHT5jtVYKPs	https://www.google.com/accounts/o8/ud	4545C807-06B2-4B45-BB81749DFA345A8C	fabiosje@gmail.com	Fabio	Souza
105	https://www.google.com/accounts/o8/id?id=AItOawkfzCZeJo_n1jmBJO82nn3FTJP-z-8F47g	https://www.google.com/accounts/o8/ud	331071EA-026E-46C7-AE0D6AA497DCDDE9	justinswartsel@gmail.com	Justin	Swartsel
77	https://www.google.com/accounts/o8/id?id=AItOawlPkeQqCVl9Dwcvlz9_0_aAl-md8Co125c	https://www.google.com/accounts/o8/ud	AA33E295-18B3-42B5-BB6B9455E0B40410	beshkenadze@gmail.com	Aleksandr	Beshkenadze
78	https://www.google.com/accounts/o8/id?id=AItOawmi1YA8cc84XiJ2lhEC1qp6XKDI0g8pgxg	https://www.google.com/accounts/o8/ud	7C392338-D3A9-4476-8C32E6C238C0871A	greif.tomas@gmail.com	Tomáš	Greif
106	https://www.google.com/accounts/o8/id?id=AItOawkQ3ORMEBqMzHYwxd7PQWv37NpYwBSKlsE	https://www.google.com/accounts/o8/ud	16D684C3-92EC-4612-A41680952DE662D8	grahampcharles@gmail.com	Graham	Charles
79	https://www.google.com/accounts/o8/id?id=AItOawmheNvcfpnX1LA_QKcvm5yVKp_fzMIkjQo	https://www.google.com/accounts/o8/ud	5437ACE3-9ACE-4CFA-9F0A7CF20354C008	ravuya@gmail.com	mike	stedman
80	https://www.google.com/accounts/o8/id?id=AItOawnRwN7t-eGiH8tctJres-Qpcg6rM_tV5LA	https://www.google.com/accounts/o8/ud	8C06A45F-1439-4F94-85566AA1FB38B3D8	dennis@denniscjones.com	Dennis	Jones
81	https://www.google.com/accounts/o8/id?id=AItOawk8XhugWQtF2z2wIcvwthnbShRYAKTMp0U	https://www.google.com/accounts/o8/ud	6E1AD104-91C1-4E01-B864B4561C32BCE4	ilan.kasimov@gmail.com	Ilan	Kasimov
82	https://www.google.com/accounts/o8/id?id=AItOawnv9bWa0jOsgCDbSXghLzOOc3ZFGyEUfQg	https://www.google.com/accounts/o8/ud	9CCAF4DF-CD4E-4136-8BBE955CACEF9366	mdanso@gmail.com	Michael	Danso
83	http://casualjuergen.wordpress.com/	http://casualjuergen.wordpress.com/?openidserver=1	280DFF1A-A3EE-40BA-A626344498BB28E5	\N	\N	\N
85	https://www.google.com/accounts/o8/id?id=AItOawlcrz-oEyVBRjPBk1ZP9PscUiKpXbvZ0R4	https://www.google.com/accounts/o8/ud	FCB64F92-20AA-4C45-BC70535DA57704F3	kolypto@gmail.com	Mark	Vartanyan
86	https://www.google.com/accounts/o8/id?id=AItOawkQVAhJYXZgsmB9Q7ZJO6B21edEMIAd7dk	https://www.google.com/accounts/o8/ud	0F3B878C-B729-4991-BF71B134ECA09838	dani4686@gmail.com	D Daniel	D
87	https://www.google.com/accounts/o8/id?id=AItOawldKFDBAtyWuB57z8HrpHMLvdzcr8BKz7s	https://www.google.com/accounts/o8/ud	91F1E229-9BF1-43BF-8F38CF2B9999DE67	benyblack@gmail.com	Behnam	Yousefi
88	https://www.google.com/accounts/o8/id?id=AItOawkO8nEWxb2wBtQ-dkyFUtkobym_DktYd6c	https://www.google.com/accounts/o8/ud	870984EA-C3B2-40D4-82063B51130D97C5	ivan.zivanovic@levelbit.com	Ivan	Zivanovic
89	https://www.google.com/accounts/o8/id?id=AItOawlVLvJ5JvBpuBPXm_flujI_Df2HEGr2R2c	https://www.google.com/accounts/o8/ud	79DF3C03-B8F6-406F-968166E180E48FD7	karthikn2411@gmail.com	KarthiKeyan	Raju
90	https://www.google.com/accounts/o8/id?id=AItOawlBEtzNwPFzGOMDmBoJYrDmp1pEg6EdTZo	https://www.google.com/accounts/o8/ud	44A78781-26C8-40E2-BF72F3CA79C11AAB	matheuspatury@gmail.com	Matheus	Sampaio
91	https://www.google.com/accounts/o8/id?id=AItOawkVExdZypdUeJGrCcC6nhrHSX0lrJFZA50	https://www.google.com/accounts/o8/ud	ECF63707-030B-4A4B-9D3EFF98E4420D44	henrik.holmgaard.hoyer@gmail.com	Henrik	Høyer
93	https://www.google.com/accounts/o8/id?id=AItOawkVTR_PWAydFItjjykvraQyIZt2L_ryIJQ	https://www.google.com/accounts/o8/ud	54B3B7AF-5097-47D9-A46A4E0226E3FE0C	fallensoldier52@gmail.com	Cheney	Tsai
94	https://www.google.com/accounts/o8/id?id=AItOawlvejpQRKtZqLPRp_7z7g6JccCFpUikPgY	https://www.google.com/accounts/o8/ud	7EF21D14-D39B-4B2A-BDBC7A1D05AD5C58	dang.hvu@gmail.com	Hoang-Vu	Dang
95	https://www.google.com/accounts/o8/id?id=AItOawkOENFYAIqCr24H8EgKe_hAX86CXjS2-V8	https://www.google.com/accounts/o8/ud	3D91F008-8963-4BCE-AEED1DBC68EDC5C9	brsaweda@gmail.com	Erwin	Brandstetter
96	http://wodecraft.wordpress.com/	http://wodecraft.wordpress.com/?openidserver=1	80919925-3DEF-4EE2-86FE875B6CA7C8B9	\N	\N	\N
97	https://www.google.com/accounts/o8/id?id=AItOawnscJMg9IVeMcVYqoMftg8v0DonpCCGKSA	https://www.google.com/accounts/o8/ud	C9C550A4-56B1-4017-A811220B498B3D27	jennedebleser@gmail.com	Jenne	De Bleser
98	https://www.google.com/accounts/o8/id?id=AItOawlbfLCDIyFYeGBR-Vm5LDVlbp9-JlmXBrM	https://www.google.com/accounts/o8/ud	99932BE0-9B24-48FF-86215206C92704BC	stuehler.work@gmail.com	Matt	Stuehler
99	http://kabichill.myopenid.com/	http://www.myopenid.com/server	92F33B92-7705-4F90-A9FE1EF2CBD7DCFF	\N	\N	\N
100	https://www.google.com/accounts/o8/id?id=AItOawnTUIZE-0qjeiFDrRxmAgiUDPLI6BSwawE	https://www.google.com/accounts/o8/ud	C137E191-F101-47D0-B515289FC592D106	ez.amiryo@gmail.com	Hyun-woo	Park
101	https://me.yahoo.com/a/NUjOJAV.qc1u8d.5U2nO117INeA-#9acdc	https://open.login.yahooapis.com/openid/op/auth	17B36F44-5440-4CD5-99920A279BC57834	kkunal1@yahoo.co.in	\N	\N
102	https://www.google.com/accounts/o8/id?id=AItOawmZBtFaLbMbj2HxFrH06jSdnR_B5HhtYSQ	https://www.google.com/accounts/o8/ud	A0672F83-73DE-4440-B6521EDDE84D653E	shiv3250@gmail.com	Shiv	Shankar
103	https://www.google.com/accounts/o8/id?id=AItOawnVjm3gi7hMO1N9K7kXEAnuXIYQ3mrweNg	https://www.google.com/accounts/o8/ud	25148091-C19D-4B0C-BD0329EC786CBC19	dennis.babkin@gmail.com	Dennis	Babkin
104	https://www.google.com/accounts/o8/id?id=AItOawkhZc7Xbz-ChFFlsK0ZVCZFqjH-Ux3q-Us	https://www.google.com/accounts/o8/ud	3D81112C-8728-4863-9BB9E93D155AB442	thibaut.delarbre@wiredelta.com	Thibaut	Delarbre
107	https://www.google.com/accounts/o8/id?id=AItOawmWbeXB4W3mMbnSe8rsy0H9sooXOqojIfg	https://www.google.com/accounts/o8/ud	0395B960-CA92-42E0-A865C03164A43BF9	abbas.zolfaghari@gmail.com	Abbas	Zolfaghari
109	https://www.google.com/accounts/o8/id?id=AItOawktC5RxgqSIkwRIsRsfU36nEXLmtezsIXg	https://www.google.com/accounts/o8/ud	F2E762BC-4F4B-4AA1-A0B17307BD03339D	whytheq@gmail.com	jason	quirk
84	https://www.google.com/accounts/o8/id?id=AItOawni6Q0XiDS_tmTYdu7tBJaYzEXGcFfngDY	https://www.google.com/accounts/o8/ud	D86453A8-3076-4A4C-8F8CD1EE0B807809	yessivaganesh@gmail.com	sivaganesh	santhanam
110	http://sashao.myopenid.com/	http://www.myopenid.com/server	B2876F1B-EE7D-4DB0-B12B2FE0468D0FB9	\N	\N	\N
92	https://www.google.com/accounts/o8/id?id=AItOawn4ql3pxx4rO9hyuliIvnW-iDWwIjQTFIU	https://www.google.com/accounts/o8/ud	04B39B76-8E25-462F-8203E5B30B9CBDE5	di@espacot.pt	Francisco	Moreira
111	https://me.yahoo.com/a/CBHIbEl01uRrM6wkXIgIoKRYPw.Zwo0.yz3O#d6ff7	https://open.login.yahooapis.com/openid/op/auth	CA92F44F-DCAD-4A9E-AE61A85E37388C44	a_arabsheibani@yahoo.com	\N	\N
112	https://www.google.com/accounts/o8/id?id=AItOawkhGY6beZnC-TXMu72cwLt5IijGme0bDZ0	https://www.google.com/accounts/o8/ud	6112E5EC-11F7-4F46-944A6F1C30E41588	hamed.ma7@gmail.com	Hamed	Momeni
113	http://biswasishere.myopenid.com/	http://www.myopenid.com/server	CB1AF487-6DC8-42F3-84A7F09A64F35B42	\N	\N	\N
114	https://www.google.com/accounts/o8/id?id=AItOawmOy39sXufB9FZL8ypG6hUwhRDQzq5D0IY	https://www.google.com/accounts/o8/ud	1E50C03C-AA3D-407E-A934567E4A79473B	supermania@gmail.com	Yongbin	Yu
137	https://me.yahoo.com/a/j1fhRxhtzpdebxb7adtV2bsvuNg3fq1Psg--#536d7	https://open.login.yahooapis.com/openid/op/auth	856861A8-94C9-41F3-ACE18075D02200F3	maayehkhaled@yahoo.com	\N	\N
116	https://www.google.com/accounts/o8/id?id=AItOawm120TjgbFcEDtayyz0nVAfhdd8ETh9Qk4	https://www.google.com/accounts/o8/ud	AEF69138-E6B2-4CDC-9285182ADB65668C	raje444pln@gmail.com	raja	mohan
117	https://www.google.com/accounts/o8/id?id=AItOawkAc3cjwBJ1dAJCuDF31lILIfLXBo-1WpQ	https://www.google.com/accounts/o8/ud	6C5A34D2-6C37-47FC-A15EBF6A0385BFAE	reputator@gmail.com	Allan	Larsen
118	https://www.google.com/accounts/o8/id?id=AItOawnOiIc49zwim5bN9CpY7amZlkZO7qaCcbY	https://www.google.com/accounts/o8/ud	D08A4BE9-C92D-4BE6-967103A3BC9001AF	steven.samuel.cole@gmail.com	Steven Samuel	Cole
119	https://www.google.com/accounts/o8/id?id=AItOawmYcg6vWfdqx5UNwnZB297m34FCBBoGmZc	https://www.google.com/accounts/o8/ud	530D5273-E54A-4D59-99F4454D975B278A	adatapost@gmail.com	KV	Prajapati
120	https://www.google.com/accounts/o8/id?id=AItOawnb8h3cHS-iijYspFDSFyJscevvJopCgyo	https://www.google.com/accounts/o8/ud	3AEA612C-53CB-41BD-A70FA05EF30F617D	hieuht@vnoss.org	Hà Trung	Hiếu
121	http://rookiedev.myopenid.com/	http://www.myopenid.com/server	5FA4BD52-B5DC-4131-856F986AA454B1CF	\N	\N	\N
122	http://jason.sperske.com/	http://jason.sperske.com/MyID.config.php	865AEC6F-ADDB-41FC-9A247F8957BF2651	\N	\N	\N
124	https://www.google.com/accounts/o8/id?id=AItOawnax10dl7lF0aC9qsEKECaFwWUzGB2x1C4	https://www.google.com/accounts/o8/ud	7F9CF0C1-7138-4665-BFB3D98FF3FF6D35	knbulut@gmail.com	Kübra Nur	Bulut
126	https://www.google.com/accounts/o8/id?id=AItOawlUJBkxm2gzpN7gnlIvkUsQNnTz0nnHWy8	https://www.google.com/accounts/o8/ud	1F7C702F-706A-4C6C-A6F88B5D1D7FD7A9	corinnekubler@gmail.com	Corinne	KUBLER
127	https://www.google.com/accounts/o8/id?id=AItOawnv7T93AXB8p8r4b8rYcEUkcHZcO96WwNc	https://www.google.com/accounts/o8/ud	C99FB97E-C708-454A-91DD54402B50EFD4	sathya@sathyasays.com	Sathyajith	Bhat
138	https://www.google.com/accounts/o8/id?id=AItOawn5oWaW4NgNkNLXVPeyv-jM-pcMvc_BAFY	https://www.google.com/accounts/o8/ud	30097ACC-DA04-4151-B74863D2C2A22E85	markrada26@gmail.com	Mark	Rada
128	https://me.yahoo.com/jelevin26shd#ffca8	https://open.login.yahooapis.com/openid/op/auth	FB2BC12D-C6D2-440E-93396E5795EE9C79	jelevin@yahoo.com	\N	\N
129	https://www.google.com/accounts/o8/id?id=AItOawkHqljRXQGV2hyTW7G1gy6tUQYUSfuSplM	https://www.google.com/accounts/o8/ud	E74EEFDB-1385-4226-84157D96D7109088	leangpengan@gmail.com	Pengan	LEANG
115	https://www.google.com/accounts/o8/id?id=AItOawkB3Go15ndEhkdhDYqLFfNF8HG_JlC044k	https://www.google.com/accounts/o8/ud	945721E0-7CA0-4AA6-BE4909A332B0B999	agupta@activision.com	Akhil	Gupta
130	https://www.google.com/accounts/o8/id?id=AItOawlsPmmK0uDBZBs8lQO22LHrn8JO6UBXGQQ	https://www.google.com/accounts/o8/ud	8EF6FD6F-3C4E-4E68-925A93429889FAFF	andymcneish@googlemail.com	Andy	McNeish
131	https://www.google.com/accounts/o8/id?id=AItOawn-U_0Y5FN1oHMINrL0QP9LvsaF3pwWejw	https://www.google.com/accounts/o8/ud	044B0DBD-9568-4C9A-837348BF27057A16	aa.kuma3@gmail.com	Akio	Kumano
133	https://www.google.com/accounts/o8/id?id=AItOawl-r8EuMLLRPhfloZ085EQrgA_nvdxy3KM	https://www.google.com/accounts/o8/ud	82CF2F5F-EE68-4889-8C7EAEA2DD3B596D	bhushan.tadwalkar@gmail.com	Bhushan	Tadwalkar
139	https://www.google.com/accounts/o8/id?id=AItOawlyU5SlwZvLSXeb_JOZfjdVtAAqC_5Ep0U	https://www.google.com/accounts/o8/ud	A5F628FE-A8AF-43F1-B99225CBE09192F4	ljdc14@gmail.com	Louie Jay	de la Cruz
140	https://www.google.com/accounts/o8/id?id=AItOawkf7zV_MUPe-wB875maPJE5408SwL_h61k	https://www.google.com/accounts/o8/ud	EC846568-028A-4A00-9C6F4FEE45A75583	sandeshmahajan72@gmail.com	Sandesh	Mahajan
134	https://www.google.com/accounts/o8/id?id=AItOawmy2Dp5mdScmoN24SRNCItPXNgK-9m1pXw	https://www.google.com/accounts/o8/ud	3B5469A0-418F-4E6B-A27D1EA9E0D48860	john@alcock.org	John	Alcock
132	https://www.google.com/accounts/o8/id?id=AItOawmiUWAw91x5ukP6drJOUyQRP0_Z34DdUcs	https://www.google.com/accounts/o8/ud	002D0B16-C765-4E3E-B34BA7C3BF161EC7	dirrell@gmail.com	Tim	Stanley
135	http://elwetana.myopenid.com/	http://www.myopenid.com/server	7278326E-8B3C-43CE-A20B906FEC861C16	\N	\N	\N
136	http://david-japan.myopenid.com/	http://www.myopenid.com/server	849B6915-BD51-4C63-A12AEB82A64D3042	\N	\N	\N
125	https://www.google.com/accounts/o8/id?id=AItOawkxxrN2_oTGokHXd41lYn6X2glHD8KxHcM	https://www.google.com/accounts/o8/ud	488A32E9-3FD9-475C-93F5E7FE2C1BC9E8	kaiwinter@googlemail.com	Kai	Winter
141	https://me.yahoo.com/a/SvQJwzkboP1liVV6Y0kM9TwqyXtEv46RrUU-#416d0	https://open.login.yahooapis.com/openid/op/auth	28718FA4-53E4-48A0-AAB48B5E32878867	pillaimanisha@yahoo.com	\N	\N
142	https://me.yahoo.com/a/5PVa2A11rv.apRcUt3rE5i8.8tFswA--#0cae7	https://open.login.yahooapis.com/openid/op/auth	84148856-0209-4CF5-BCC2C66021B6FAFE	rashi_169@yahoo.com	\N	\N
143	https://www.google.com/accounts/o8/id?id=AItOawkG42R0HC4-mr4qFUZ-g5tipDG-ebWpciM	https://www.google.com/accounts/o8/ud	50BEAB31-1C5F-415A-AD0781D18A124294	brow4u@gmail.com	Prem Dass	Baskaran
144	https://www.google.com/accounts/o8/id?id=AItOawnIoBLKXTMLCg4lQ8ZujZogf_aQiUCHIwU	https://www.google.com/accounts/o8/ud	788DBB9E-7F38-4AB1-A5974248C06B0669	ntnulemon@gmail.com	lemon	c
145	https://www.google.com/accounts/o8/id?id=AItOawme5x5Ptr86o622i2BKP1S9HDPLCs4WABU	https://www.google.com/accounts/o8/ud	C5612399-28F8-47C8-80C3D3FB58FCE27D	adrianonantua@gmail.com	Adriano	Nântua Carneiro
146	https://www.google.com/accounts/o8/id?id=AItOawnj-dAuT95bW55vrRbtu1ybkM-IyBKesfc	https://www.google.com/accounts/o8/ud	79E98A83-DCFD-4B76-92B9E5CE7C9D2686	hoganlong@gmail.com	Hogan	Long
147	https://www.google.com/accounts/o8/id?id=AItOawlmioGBvOVFyLZOSEzZNtPl2bjvL2AX9Ao	https://www.google.com/accounts/o8/ud	096C9FF0-6C37-4224-A38F5D1F7AC96D68	andoreis@gmail.com	Leandro	Reis
148	http://saleemalik.myopenid.com/	http://www.myopenid.com/server	EF63715D-B041-4997-9E7C6EA7E765CBAD	\N	\N	\N
149	https://me.yahoo.com/a/ULZCrHwCwffHzAjGQgKhr68dO2rt#c2dce	https://open.login.yahooapis.com/openid/op/auth	A7FD94F0-6DED-47E6-BC53A93E39D5E99A	suedeuno@yahoo.com	\N	\N
150	https://www.google.com/accounts/o8/id?id=AItOawnAU62AexltWfRtQB1mWjK-5BPDlaGs2uI	https://www.google.com/accounts/o8/ud	3B6E672C-6832-4FA6-B79EC07FF9150214	kbeck88150@gmail.com	Nicholas	Kuhlenbeck
151	https://www.google.com/accounts/o8/id?id=AItOawmKUbtMmqNYJrCjXlsgjPl52_9rbNNeZFs	https://www.google.com/accounts/o8/ud	D82F1741-DA08-4FF3-A5C239ECCAE3EE07	eric.m.gray215@gmail.com	Eric	Gray
152	https://www.google.com/accounts/o8/id?id=AItOawlx0Y6vFBN0D2LrNz42rrXoRYh5oO8tPdg	https://www.google.com/accounts/o8/ud	DF5A2460-F2AA-4A57-B93482165B840F9C	petersky@gmail.com	Kyle	Petersen
154	https://me.yahoo.com/a/DwJoAgYbiYr6zw2zCe5aJwm8axli2F_upMRTQ.q3#83322	https://open.login.yahooapis.com/openid/op/auth	F380F1B3-BDB6-4F70-81921F96D7A569C9	nikhil_dayalapwar@yahoo.com	\N	\N
155	https://www.google.com/accounts/o8/id?id=AItOawkro-hYd3fI8u4YvEcw1aLgj7KSi0BlUZQ	https://www.google.com/accounts/o8/ud	06334FD6-FF92-4D85-AD3268797035A2FC	tapan.parikh6843@gmail.com	Tapan	Parikh
156	https://www.google.com/accounts/o8/id?id=AItOawkmM8r-8Jbsnuuvyy92UHXJFy2akcGFdZQ	https://www.google.com/accounts/o8/ud	5CAB3F26-D085-49B9-B68DF57DD82F6BAE	jjwdesign@gmail.com	Jeff	Walters
157	https://www.google.com/accounts/o8/id?id=AItOawkiSyf_ws60ebXIUmnfYUSwbpv25HvFqU0	https://www.google.com/accounts/o8/ud	BBD672B5-222C-412A-B2056E8C13F0A0C9	muhammadali506@gmail.com	Ali	Naqvi
158	https://www.google.com/accounts/o8/id?id=AItOawlEbcwcxifnCT2W2gUhqaHn-KiuxVlb6YA	https://www.google.com/accounts/o8/ud	BB15876C-30CE-4504-A3CB4E2D359F3EB9	halladaypublic@gmail.com	Tom	Halladay
159	https://me.yahoo.com/a/XTi.qZA81IQDB9hOXgvrYn6accPV#e7416	https://open.login.yahooapis.com/openid/op/auth	B73466E5-22F5-4A8A-9FD0467589826174	glenn_heinze@yahoo.com	\N	\N
160	https://www.google.com/accounts/o8/id?id=AItOawmNlTlkEDMik_x_GRWhsapsIonPq2GbA90	https://www.google.com/accounts/o8/ud	654ED480-62CF-4CAB-B70C043DC69D672C	sillyerik@gmail.com	Erik	Eckhardt
161	https://www.google.com/accounts/o8/id?id=AItOawmRT-e8Xj51seHo6L8U4dWbnZxpFGsmqXQ	https://www.google.com/accounts/o8/ud	F2F61CBD-4315-4E1B-9FB1924E61547DC3	magnanamous12@gmail.com	Scott	Mankowitz
162	https://www.google.com/accounts/o8/id?id=AItOawmk16pt-S6zx9lWYLEEHTelQ2P7oKyBWEo	https://www.google.com/accounts/o8/ud	C16EDB36-6C83-4839-B1EA312BBB2CD3B0	amatthies@babbel.com	Anne	Matthies
163	https://www.google.com/accounts/o8/id?id=AItOawknGgACojSSmiW1AXatC56xZyyljlm1phk	https://www.google.com/accounts/o8/ud	53ECB2C7-6308-4942-B23926FB256F5792	alastairjwright@gmail.com	Alastair	Wright
164	https://www.google.com/accounts/o8/id?id=AItOawkaIi435nnxMwDmb1V4nasDlX2A-NpvTgE	https://www.google.com/accounts/o8/ud	C5A1D505-FF58-4A64-B3A5526444D33949	sholmes2428@gmail.com	Sabir	Holmes
165	http://bugness.myopenid.com/	http://www.myopenid.com/server	EE02C9A7-8B44-4D8C-AEE6C344B805C179	\N	\N	\N
166	https://www.google.com/accounts/o8/id?id=AItOawlXPn164jozJg1J1ZlSXymS0e3V_Kwpzxs	https://www.google.com/accounts/o8/ud	8449430C-2A95-4996-AB223B89E93B67DD	seijino8@gmail.com	清治	粕谷
167	https://www.google.com/accounts/o8/id?id=AItOawn6-wKT4okb69tR7GcboktlbQgxhosGrbo	https://www.google.com/accounts/o8/ud	305E66FC-7427-486F-B81689E5C9EE5643	j.palomar.jr@gmail.com	JR	Palomar
168	http://mscheuner.myopenid.com/	http://www.myopenid.com/server	D1A052A6-8B07-445E-BA052AD9ADCD09E1	\N	\N	\N
169	https://www.google.com/accounts/o8/id?id=AItOawnDaArwgHrMi38QW65UhqwWgFcIinu8ncg	https://www.google.com/accounts/o8/ud	021D41A0-DC7D-4EED-AAE80A92E523E4E4	theres.07@gmail.com	therese	j
170	https://www.google.com/accounts/o8/id?id=AItOawn1LyK2B-Bur7r9FqP6-x1YFyJJt4KiDBU	https://www.google.com/accounts/o8/ud	F0D59B5B-14AB-4AE2-B65B2D7B83EC2151	mharen@gmail.com	Michael	Haren
171	https://www.google.com/accounts/o8/id?id=AItOawmS2e_cvxE3dsZdkxYUh_hb2VKUOKUMsLI	https://www.google.com/accounts/o8/ud	02769941-E9E9-4BB5-AED096C6D79D3479	arnautov.eugene@gmail.com	Арнаутов	Евгений
172	https://www.google.com/accounts/o8/id?id=AItOawlrXWO2by9YozzZZLRP7RD1wZ97qK_-r84	https://www.google.com/accounts/o8/ud	75AB3D4A-4CE7-4DF7-8496408E27CE2D16	olliejones@gmail.com	Oliver	Jones
173	https://me.yahoo.com/a/nrArpB873cgz.dUMMiHkSjZAzayl#441d1	https://open.login.yahooapis.com/openid/op/auth	0CAD51CF-89B8-49A6-AED1E3308552B1E6	navotera@yahoo.co.id	\N	\N
174	https://www.google.com/accounts/o8/id?id=AItOawnnr6CugDWbPjA5bEqZJWkT3i6cyyKuKhc	https://www.google.com/accounts/o8/ud	D617EF96-0942-4864-A2958744D4623831	matt@yurisko.net	Matthew	Wheeler
176	https://www.google.com/accounts/o8/id?id=AItOawmf2EVHZAZXkE00FIi37RcZ2c95fVA-4kg	https://www.google.com/accounts/o8/ud	CF803981-2CBE-454E-AF4601578DB0F18C	empeus4@gmail.com	Empeus	Treius
177	https://www.google.com/accounts/o8/id?id=AItOawlrhNQkqE3_e6VDY0kteG3E_m_BmnqY4WQ	https://www.google.com/accounts/o8/ud	D7FD34EC-C61D-444F-8AD998EC64579808	matti.john@gmail.com	Matti	John
179	https://www.google.com/accounts/o8/id?id=AItOawlmfou9t0akoI18qvSbXcmJt_jJ7tZgG0U	https://www.google.com/accounts/o8/ud	32E62454-FAC0-43BC-A5BE2F54D63A3AFA	rekcah5@gmail.com	Nick	Maultsby
180	https://www.google.com/accounts/o8/id?id=AItOawkJfZkVmJpJScuy30xy8p7ocAqSOqcd078	https://www.google.com/accounts/o8/ud	3D6BDD03-F3EE-4401-ABD128CC15392440	bluebaroncanada@gmail.com	James	Baron
181	https://www.google.com/accounts/o8/id?id=AItOawnvdx6nD_Fv1MPzEGW8HOlf6c-HEz2VyUE	https://www.google.com/accounts/o8/ud	7FAA4BE1-749E-4985-B3D88271CB31196C	rene.zbinden@gmail.com	Rene	Zbinden
182	https://www.google.com/accounts/o8/id?id=AItOawkfMSGHU4tjrargIS4qaHgYWAmQfTtdSJc	https://www.google.com/accounts/o8/ud	957D194D-D665-420D-A92CD2D8B73C78A1	udupiravi@gmail.com	ravi	j.v.
153	https://www.google.com/accounts/o8/id?id=AItOawkSnxAwWXbNDL59EIsD2RCKnWQrlEVIHjc	https://www.google.com/accounts/o8/ud	413D30A7-16DB-4BCD-A329407616C5D70E	adhikarideep@gmail.com	Deepak	adhikari
183	https://me.yahoo.com/a/68QVr30gl4HXzuE4RjrfFblMFEo-#87741	https://open.login.yahooapis.com/openid/op/auth	34A01E8F-0E8E-447B-828CA03153FF5037	ed.heal@yahoo.co.uk	\N	\N
184	http://sarmenb.myopenid.com/	http://www.myopenid.com/server	80CF24A2-2937-42F4-88F6D250B22FB503	\N	\N	\N
185	https://www.google.com/accounts/o8/id?id=AItOawnoNVUODZhww-bDs7fS5aZO3kDdsHusCwU	https://www.google.com/accounts/o8/ud	8DA66749-D17E-4F61-B233410D8F5190FA	rose.d.perrone@gmail.com	Rose	Perrone
175	https://www.google.com/accounts/o8/id?id=AItOawnjnVsT5-QwV-GkVfvf1gTcRRkKQt4Ch9k	https://www.google.com/accounts/o8/ud	C10FE08A-05C3-4AEA-8934C116F5A35907	scottwaynereed@gmail.com	Scott	Reed
208	https://www.google.com/accounts/o8/id?id=AItOawnyL9pu_N5ePNhd69YSAEOaEEDlbuDaNmE	https://www.google.com/accounts/o8/ud	7286A7A9-92C8-4E88-9ABCE9B369205C31	maw74656@gmail.com	Marc	Weinstein
187	https://www.google.com/accounts/o8/id?id=AItOawnZ7VL0Dew8qlGrKLOL46MnAyx6rBO3NxA	https://www.google.com/accounts/o8/ud	5AECC565-A219-4CB2-AE5C4C70FBA48B6D	himanshujansari@gmail.com	Himanshu	Jansari
188	https://www.google.com/accounts/o8/id?id=AItOawmqoVo7xLzaZ5aYwSsh6_1fzeEYc2-rjjI	https://www.google.com/accounts/o8/ud	5C8EC23E-F63C-46C4-BFB63B4E65EDE757	jasonjtien@gmail.com	Jason	Tien
190	https://www.google.com/accounts/o8/id?id=AItOawkHXL1rmXd_q4Kf_2XQNfjsNKNCrzjG82k	https://www.google.com/accounts/o8/ud	1E3864AE-0853-4694-A2D51DE88D4B121B	prabhakantha@gmail.com	Prabhakantha	Chandrakumara
191	https://www.google.com/accounts/o8/id?id=AItOawkw5MUwGQSxb716G2d6gMuNDhVN1Z2RHs8	https://www.google.com/accounts/o8/ud	0D271AF7-8238-4A0D-8C38A9D26454DFAF	kenparisi@gmail.com	Ken	Parisi
209	https://www.google.com/accounts/o8/id?id=AItOawmk_6BxmLiLG04tVPvdfT5fM7e2NOanTK0	https://www.google.com/accounts/o8/ud	36146847-8D9C-4FB9-9422028341A72091	ashbyj@gmail.com	jesse	ashby
192	https://www.google.com/accounts/o8/id?id=AItOawkWMM3BEuMJLRPRmWtmAicTWk12f_4BHWk	https://www.google.com/accounts/o8/ud	0F25F6CE-B2BA-40C4-9F8CF223E4E4AE07	crosan@gmail.com	Andrew	Cross
193	https://www.google.com/accounts/o8/id?id=AItOawmOpe6c3NjEFOHd9LiYHuX-bKKjg2hijeU	https://www.google.com/accounts/o8/ud	CBED905C-155A-4589-A7A5B110082C7812	jjohnskc@gmail.com	Jason	Johns
194	https://www.google.com/accounts/o8/id?id=AItOawnmZimRuyRr1FtsPPWiRcTCSexxmX-L0Z8	https://www.google.com/accounts/o8/ud	8B7EA0E6-29E3-461E-B98F626DE227C79E	justin@createdm.com	Justin	Erswell
195	http://freefail.myid.net/	http://server.myid.net/server	B8691E76-6CE9-47C0-BD096DBA60CC66E7	\N	\N	\N
210	https://www.google.com/accounts/o8/id?id=AItOawkFBt5UE_IlciS0r84IWveDiHcbeNy3tQQ	https://www.google.com/accounts/o8/ud	EB65776A-373C-487B-A52D9FA19B6834DA	andreas.schnoerr@gmail.com	Andreas	Schnörr
217	https://www.google.com/accounts/o8/id?id=AItOawmxpU2lNHRw4EO3JN-9pZz70broifT1PxU	https://www.google.com/accounts/o8/ud	465202B7-BBC5-4A40-830F55CEFE7F61FD	neilmcguigan@gmail.com	Neil	McGuigan
196	https://me.yahoo.com/a/joqfhdJmloInkewTpenkUtWmUP4rCR0-#30790	https://open.login.yahooapis.com/openid/op/auth	A713D1C3-D4E1-4CCE-97D0BBDE6CF80421	popescu_fm@yahoo.com	\N	\N
197	https://www.google.com/accounts/o8/id?id=AItOawlUrWBHPBzxy4Hf_5IdssHM9fw9siKFKZM	https://www.google.com/accounts/o8/ud	B5B5ABC0-0FBF-45FA-9E4AF2EFE24AE2A2	popescu.florin@gmail.com	Florin	Popescu
198	http://outerbridgemike.myopenid.com/	http://www.myopenid.com/server	DD9B0860-9150-446B-9D4E1654DE1CFE27	\N	\N	\N
216	https://www.google.com/accounts/o8/id?id=AItOawm32a3UKfDOt9XYFhyqmcxNy6cIrhrsg_0	https://www.google.com/accounts/o8/ud	68C92F78-C730-4AF7-9F0B26C0B9E12593	deborah.claxton@gmail.com	Deborah	Claxton
199	https://www.google.com/accounts/o8/id?id=AItOawkYylkdaRvQiZZ5JhOINkslXred5CJgCLM	https://www.google.com/accounts/o8/ud	FC655BB2-490C-4042-9AADC51F33C5178F	phaufe@gmail.com	Pierre	Haufe
211	https://www.google.com/accounts/o8/id?id=AItOawn3VnhXGoDvBz1NR12FA3yZ7OK4bt06ETg	https://www.google.com/accounts/o8/ud	31D69FE3-15E0-457B-9BD4BB2E05DE43E2	cghrmauritius@gmail.com	Chris	Robinson
212	https://www.google.com/accounts/o8/id?id=AItOawmy2Qa4EyihZ_gQQS0o0ShhO6qoVnPQq7g	https://www.google.com/accounts/o8/ud	1D45EE9F-B395-42EF-B360A1E4E54DA472	dimapravdin@gmail.com	Dima	Pravdin
200	https://www.google.com/accounts/o8/id?id=AItOawk8FjPQo0JbHDWOHNA_5SqGEaSyg4Ecirk	https://www.google.com/accounts/o8/ud	599DB3B3-6C20-4A1C-B35906D31AC46641	chisholm.jacob@gmail.com	Jacob	Chisholm
201	http://vicious3891.livejournal.com/	http://www.livejournal.com/openid/server.bml	622D2625-B0DA-4F7B-924D5DDDF666C932	\N	\N	\N
202	https://www.google.com/accounts/o8/id?id=AItOawmBJlvPBhrZuRD6mdi7kgPGXClx-oqi6GM	https://www.google.com/accounts/o8/ud	2C2ABAC6-6C53-4E21-ADD54AEEBB6922BC	sunilpanchakarla@gmail.com	Sunil	Panchakarla
186	https://www.google.com/accounts/o8/id?id=AItOawmM4XGkcw9-k_OyNqXqZZ_7GAhDJI28sQw	https://www.google.com/accounts/o8/ud	E595056A-6622-41B4-A2643B092F3E3B4F	chisholm.jacob@gmail.com	Jacob	Chisholm
203	https://www.google.com/accounts/o8/id?id=AItOawlNMtsetIuJcW0cGDPzaFU-rYKQ4LdnAD8	https://www.google.com/accounts/o8/ud	650A8C09-643D-4621-8B62B3FE03B78B74	lucianf@gmail.com	Lucian	Fratila
204	https://www.google.com/accounts/o8/id?id=AItOawk1JsynPzHR9GnFYjQuDrzl5VJsZMwhEhk	https://www.google.com/accounts/o8/ud	311823CE-A388-4B19-A1485D2B3E3EA8D9	denzil.joseph@gmail.com	Denzil	Joseph
205	https://www.google.com/accounts/o8/id?id=AItOawl8Rz2euHn4DnkghIVQlPaVMlU64FscmL8	https://www.google.com/accounts/o8/ud	B3DDDBE1-E0E3-4385-805E6C5D50F5F901	geophoenix3@gmail.com	geo	phoenix
206	https://www.google.com/accounts/o8/id?id=AItOawnrKImjmPEXjHjOHoQHJkpZORg8NLYK1Vo	https://www.google.com/accounts/o8/ud	5A772473-B794-4E83-A3847E7EE70244F0	abas.abady@gmail.com	Ahmad	Abbas Abadi
207	https://www.google.com/accounts/o8/id?id=AItOawl8QpMx-wX5w_rz3Tr0k7wLKKVNrliN2I4	https://www.google.com/accounts/o8/ud	D537F2BD-0138-4BF6-91DF4F3E26F39EE1	glen.edmonds@gmail.com	Glen	Edmonds
220	http://openid.aol.com/tetradonshar	https://api.screenname.aol.com/auth/openidServer	CDE75C81-D9AE-4EA7-BE8F64571B741E91	tetradonshar@aim.com	\N	\N
213	https://me.yahoo.com/a/FvrEXAxxhvCPZC7S5KQx7PA9XIs-#46342	https://open.login.yahooapis.com/openid/op/auth	D9308BF6-CB7E-4BE3-8ADDAC1145041B1C	arn2025@yahoo.com	\N	\N
214	https://me.yahoo.com/a/FuUAm4oszcYvDUFiZ75LM2dkXfzvCyg_4k0HSxfoi1ytUJLPVA--#ddb0a	https://open.login.yahooapis.com/openid/op/auth	9D20403F-E982-458C-B15E4EAFF77615CF	dannofthursday_original7@yahoo.com	\N	\N
215	https://www.google.com/accounts/o8/id?id=AItOawlExR0uMXxvLRNsUZclcNZhgde4wRRuK4M	https://www.google.com/accounts/o8/ud	154EA07E-2907-4E3E-871ACA1ECFD2B42E	chris.jasson@gmail.com	Chris	Jasson
219	https://www.google.com/accounts/o8/id?id=AItOawkYGIY0ULUj8rcLM0hsDbNpuCq26MXKKAw	https://www.google.com/accounts/o8/ud	4D154390-9C12-4ADF-9CA4ECC1A2DE86C3	outofbrain@gmail.com	Sirko	B
189	https://www.google.com/accounts/o8/id?id=AItOawnQ9pCSJSCwgfAsf_UBo38v_LuljvoyA6s	https://www.google.com/accounts/o8/ud	4C23CBFF-A2A2-4E11-96DC1C0C266889D0	avpsoftware@gmail.com	Alexei	Popov
178	https://www.google.com/accounts/o8/id?id=AItOawm6bzpfcKSn0nIM3Ij6ryI13P68jkyaxek	https://www.google.com/accounts/o8/ud	1BF92B6A-2EFA-4BDA-9035B0EF55DB5487	johnronald.ramos@gmail.com	John	Ramos
221	https://www.google.com/accounts/o8/id?id=AItOawmtVbL2NrXDDasuI83kuSMedkqDlD1ONAY	https://www.google.com/accounts/o8/ud	A5A9C3C0-345C-46D4-90817586F36852D4	dammilaluna@gmail.com	Alice	DeM
123	https://www.google.com/accounts/o8/id?id=AItOawkE7QGX9NmClwhClka6wkYfzlLaEb_efIg	https://www.google.com/accounts/o8/ud	10218D06-ACD0-4832-B82412C0DD00EEB4	mark.byers@gmail.com	Mark	Byers
222	http://sqlpathy.wordpress.com/	http://sqlpathy.wordpress.com/?openidserver=1	5E2B5FA7-6B79-4D40-9BB7199BE60D3D9C	\N	\N	\N
223	https://www.google.com/accounts/o8/id?id=AItOawmTVWSZ3DE_QjjyYSdNLywJV8malrlL7nM	https://www.google.com/accounts/o8/ud	8275CDBF-4E94-4F9B-B83F122BE0927701	rahulrrathi@gmail.com	Rahul	Rathi
226	https://www.google.com/accounts/o8/id?id=AItOawkCjPyUM067LiVfyNxBbYkkEzPJMPKfh4E	https://www.google.com/accounts/o8/ud	DA038599-D16F-47A5-8E781D1AD585EE74	borgille@gmail.com	Rob	Gillen
250	https://www.google.com/accounts/o8/id?id=AItOawmDuljFuwxcZdJMNIkXNku062ImOI6-zbo	https://www.google.com/accounts/o8/ud	BF2E5227-A291-41F9-82D53581DC7244FE	eagle.ciit@gmail.com	Sami	Akram
227	http://angel.net/~nic	http://www.myopenid.com/server	03FE5243-92AA-4439-9F4F79FC51661111	\N	\N	\N
228	https://www.google.com/accounts/o8/id?id=AItOawmt8bigMHV4SqYYel8funA6SY6Cl2-PUTQ	https://www.google.com/accounts/o8/ud	1577563E-93A8-4414-96E98550167CF441	jamathern@gmail.com	Jason	Mathern
229	https://www.google.com/accounts/o8/id?id=AItOawlh1iYX_cZ0pgId-_weIuarWKLr536urxA	https://www.google.com/accounts/o8/ud	32C00D3E-9930-42FB-9E65CA1474AF8AF3	b4r4n0v@gmail.com	\N	\N
255	https://www.google.com/accounts/o8/id?id=AItOawmGG2P5nWEzESkZBSjH3En96pXNY8AcdqY	https://www.google.com/accounts/o8/ud	761FB42B-3320-4676-8291A60D6D776B02	daniel.leavitt@gmail.com	Daniel	Leavitt
224	http://luisfalcon.myopenid.com/	http://www.myopenid.com/server	51E4D268-AE83-4645-A22476C39976A140	\N	\N	\N
232	https://www.google.com/accounts/o8/id?id=AItOawk89OzJZ1cYkOnQeOEhoSluLFx3V1ZXu10	https://www.google.com/accounts/o8/ud	DCD696D7-2644-48DE-88623301725E3914	rojmaate@googlemail.com	\N	\N
256	https://www.google.com/accounts/o8/id?id=AItOawnqVDxR1D_RosSj3lUs44l_8J4cMQPKtNo	https://www.google.com/accounts/o8/ud	6D2DDB05-83D0-4648-84588D20DCA6CBE0	bmtp50123@gmail.com	Budhi	Mtp
231	https://www.google.com/accounts/o8/id?id=AItOawlgfugW5gT3XemN-D-cuLUmAHc9fyKIaZ0	https://www.google.com/accounts/o8/ud	39209E45-D02A-4F2E-BACF564715047BF7	phantom42@gmail.com	Joe	Coleman
234	https://www.google.com/accounts/o8/id?id=AItOawkzru-VdK5pX-k4JOMlMeGCovVw9Jn25sc	https://www.google.com/accounts/o8/ud	20103F43-6C86-4117-BBDA3D03DB76CEA1	rathi.sanjay4861@gmail.com	Sanjay	Rathi
235	https://www.google.com/accounts/o8/id?id=AItOawlBHbgK1QDgLmPgXJU4dblTkr05yFy3gug	https://www.google.com/accounts/o8/ud	ACE9FBE5-1DC8-4AC4-A1045E01DA4D7C18	jwhaley58@gmail.com	Justin	Whaley
236	https://www.google.com/accounts/o8/id?id=AItOawkhomAJDAycVV3rhPfU1_UUpBIGpKCkwj8	https://www.google.com/accounts/o8/ud	FC9C1BF4-7234-4962-8F94D6A7A3F1C9AC	ashwini2201@gmail.com	ashwini	chaganty
237	https://me.yahoo.com/a/uWmqOWgNyvcPS0J3Y1P7opMR6w--#f6823	https://open.login.yahooapis.com/openid/op/auth	67457ADD-C1CA-4F64-A9621AA8D55690F5	qc2211@yahoo.com	\N	\N
238	https://www.google.com/accounts/o8/id?id=AItOawnVStEbl8o3PCe-faTPAjSHpXabGQLwszI	https://www.google.com/accounts/o8/ud	9B6AE928-C937-45EB-8E9364330AEAA620	aabeyta17@gmail.com	Anthony	Abeyta
239	https://www.google.com/accounts/o8/id?id=AItOawlyrhvVMlfelqDu88e-ajTo3zB54i-JInI	https://www.google.com/accounts/o8/ud	C1D7C875-5044-4490-B91FF0D67B950C14	straube.adam@gmail.com	adam	straube
240	https://www.google.com/accounts/o8/id?id=AItOawkcVSEseZXh_avvWS0aA7C8GnrNCA22yeA	https://www.google.com/accounts/o8/ud	507AFFDD-3C47-4F50-8B2ABE54915AB005	tommy.odell@gmail.com	Tommy	O'Dell
241	https://www.google.com/accounts/o8/id?id=AItOawmekBZi5PY_R3Ay6KPw1H0RQ6ux8R-srDM	https://www.google.com/accounts/o8/ud	0FC6EABE-D60D-4096-A5B9BA36FB840EC9	silviuciprian@gmail.com	Silviu Ciprian	Ionescu
225	http://24ma13wg.myopenid.com/	http://www.myopenid.com/server	7C04DB8E-6447-4EAD-817EEEAA90D1729D	\N	\N	\N
242	https://www.google.com/accounts/o8/id?id=AItOawl7MXT-DJ55LSmRK9IY6a4jRrgVU6SfSII	https://www.google.com/accounts/o8/ud	6644E3D7-08A3-4C09-8BDFD968FE8BEE55	pmwoodcock@gmail.com	Patrick	Woodcock
243	https://www.google.com/accounts/o8/id?id=AItOawkFgml8up8rqUBO0j3zZJlO-TWiriwkzA0	https://www.google.com/accounts/o8/ud	13B84393-BA84-4955-B07ACABAA6344D72	kutsoff@gmail.com	Алексей	Куцов
244	http://briandurham.myopenid.com/	http://www.myopenid.com/server	3D96E664-829A-4034-9C3732600D1E820C	\N	\N	\N
245	https://www.google.com/accounts/o8/id?id=AItOawnzvDxAnF_zkl3Hgz_iNtGF7isrJHWMRo4	https://www.google.com/accounts/o8/ud	6DA07157-4A82-498F-953D643F985A2D63	namdq.nu@gmail.com	Nam	Dau
246	http://aluna.myopenid.com/	http://www.myopenid.com/server	5AA52DFE-4175-4A45-AFDE82BA19907374	\N	\N	\N
247	https://www.google.com/accounts/o8/id?id=AItOawn1nACylQImWx5ITwjQIXKEFZwvl09kHvE	https://www.google.com/accounts/o8/ud	95B77943-5940-4EA6-8EC28EAE2A46868D	eolowo@sulusoft.com	Emmanuel	Olowosulu
248	https://www.google.com/accounts/o8/id?id=AItOawktSukGAI1BrDDOeluPa0ktXEfAHxTGGMg	https://www.google.com/accounts/o8/ud	793A5D14-27C1-4AFD-93996B50E4ACF3AE	anand.phadke@gmail.com	Anand	Phadke
249	https://www.google.com/accounts/o8/id?id=AItOawltP8I48TfNQeL2Q6tVkxChz5aOnFpHIdg	https://www.google.com/accounts/o8/ud	0CE9A7C3-B15A-44AA-83C76D708E9411AB	tom@chantlersolutions.com	Tom	Chantler
251	https://www.google.com/accounts/o8/id?id=AItOawlwfg47JWmC4l9ezOZIIsUGA0mPTXmx4Yc	https://www.google.com/accounts/o8/ud	22E53CBF-1C8D-4B4E-8A30692A6793F1E8	dmitrii.shevchenko@gmail.com	Dmytro	Shevchenko
252	https://me.yahoo.com/a/PGisBWdznIBq6t25yqq0SJmDGGiL#292b3	https://open.login.yahooapis.com/openid/op/auth	AEB48931-F8A7-4BF0-8EB0B3D753F46599	ebolavih@yahoo.es	\N	\N
253	https://www.google.com/accounts/o8/id?id=AItOawnKiVUZf9MuigIOsqzPNLjtoP6ZN0-_HYA	https://www.google.com/accounts/o8/ud	099BD98E-7C1A-461F-AB3447BA4CA9E213	downwind@gmail.com	Joachim	Isaksson
254	https://www.google.com/accounts/o8/id?id=AItOawlk25sV7QvqcLDqN6BGWmH_J2hWi5A-lCQ	https://www.google.com/accounts/o8/ud	95DF47D9-170A-4D28-AC19A1F84C195CD0	onyaktechsales@gmail.com	Chris	Onyak
257	https://www.google.com/accounts/o8/id?id=AItOawnwxTioc6LqIRnQdZ12jfhqGCa11sm3MAI	https://www.google.com/accounts/o8/ud	C5BB0FB0-95A1-4999-98DB9E68A0D707B7	ankurmit2006@gmail.com	Ankur	Mittal
258	http://dannyar555.myopenid.com/	http://www.myopenid.com/server	D8BBB82D-7137-415B-8A2F1D08F8A5E1E1	\N	\N	\N
259	https://www.google.com/accounts/o8/id?id=AItOawnyv1T8Gf2a3-VPwUgPZCYQFur0sdRptXw	https://www.google.com/accounts/o8/ud	56BE304F-4C9C-436F-AA675E10E48C0797	juergen.hollfelder@gmail.com	Juergen	Hollfelder
261	https://www.google.com/accounts/o8/id?id=AItOawnMQGYzYPje30W9jGWRVL697fsnSwDZVPQ	https://www.google.com/accounts/o8/ud	3A1BFF80-CEF5-4A88-907B634121B38A08	chandimamk@gmail.com	Chandima	Kalansooriya
262	https://www.google.com/accounts/o8/id?id=AItOawlk-sn3wtu4hmaGzSOhYBc9DrF2MlLz058	https://www.google.com/accounts/o8/ud	9C8242ED-60BD-4D8E-B72B5A13B0CA3535	ray023@gmail.com	Ray	Nowell
263	https://me.yahoo.com/a/UOTyt1cO3oEZ4.jfotYYda.984c-#fe2f3	https://open.login.yahooapis.com/openid/op/auth	A8E2C4B1-0446-4D6F-A3C7CF0476645849	hpdcebu@yahoo.com	\N	\N
264	https://www.google.com/accounts/o8/id?id=AItOawkJXN6ReP4R_eIpucb3NRok9eQ3tkL5dlk	https://www.google.com/accounts/o8/ud	01B0B9A1-44E4-4B93-B640323BB055D115	pramendra@gmail.com	Pramendra	Gupta
265	http://mehdilotfi.myopenid.com/	http://www.myopenid.com/server	65F41A45-86F6-427B-B3CA7FAC7598CEDA	\N	\N	\N
230	https://me.yahoo.com/a/_UsmdF9il82lVMlzdV7J5vur.ydT4W8-#2a81d	https://open.login.yahooapis.com/openid/op/auth	31FACEDC-74B1-42BB-93841DDB25477DDA	toseevivek@yahoo.co.in	\N	\N
266	https://www.google.com/accounts/o8/id?id=AItOawkg-hSt-rfT7E0fvzD--RqHfHoxYq8m9tY	https://www.google.com/accounts/o8/ud	BB1544DA-2307-4B2A-AEB41B4CB19B3CDB	rich.bradshaw@gmail.com	Rich	Bradshaw
267	https://www.google.com/accounts/o8/id?id=AItOawk1Bknr8_0yNIictaql60zOUWhekgjHTlg	https://www.google.com/accounts/o8/ud	C44C74EE-2F9D-4B30-82B0ED50F575E507	bondythegreat@gmail.com	bondy	the great
268	https://www.google.com/accounts/o8/id?id=AItOawl3PP-544xpcSm5xj1kkI0l-OooeXGS7AQ	https://www.google.com/accounts/o8/ud	1D2CE6EB-770C-4A82-BC65EFB447D5367C	horriblehero@gmail.com	Muthu	kumar
269	https://www.google.com/accounts/o8/id?id=AItOawnovWZeern5qUVscH1jGlXmHsQXptn1LIA	https://www.google.com/accounts/o8/ud	6F9BE5A6-016A-46BC-B3B9255B3A75EE4E	turalsemail@gmail.com	Tural	Teyyuboglu
273	https://www.google.com/accounts/o8/id?id=AItOawnRXBDokS1WJ4lcHCTZl7Eh2KtPv9AudlI	https://www.google.com/accounts/o8/ud	E63B6292-8903-4DC6-81C6CF24B251E53D	prasadniharika22@gmail.com	Niharika	Prasad
288	https://www.google.com/accounts/o8/id?id=AItOawljcCTEUfSULG9nD0-hJgTPZeqsIkpoNzA	https://www.google.com/accounts/o8/ud	B853D754-FC77-483C-A1FC6B5A567D633F	emanuel.feruzi@hub26.com	Emanuel	Feruzi
272	http://mcafeemra.myopenid.com/	http://www.myopenid.com/server	0A67F171-5EE7-4A04-BD8FDA6188EA9826	\N	\N	\N
289	https://www.google.com/accounts/o8/id?id=AItOawmr21cR2rTYs_7a1LY4QebZMrv912kvHiw	https://www.google.com/accounts/o8/ud	EF92FBA0-D195-4C6F-B47B4EE9357DBE91	spmaganti@gmail.com	Sai	Maganti
292	https://www.google.com/accounts/o8/id?id=AItOawl3uisX-L-94cPFfKr0M-ia41Xt5SbYMDQ	https://www.google.com/accounts/o8/ud	C0B075B9-5E15-4056-96E7CA66F71B2982	epool862@gmail.com	Ahmad Saiful Bahri	Mat Amin
271	https://www.google.com/accounts/o8/id?id=AItOawljcG_bBiC55mUiDxC9JlbgoVukZ3F73pg	https://www.google.com/accounts/o8/ud	17FC1CBA-FEA2-499E-B0A32B38DF25EEA9	ravimistryof180@gmail.com	Ravi	Mistry
274	https://www.google.com/accounts/o8/id?id=AItOawkCzdPyVx0gZiE-ZYoiEy1xZnVFhmtNlJc	https://www.google.com/accounts/o8/ud	0D45FA28-686D-4F91-BB7A38947EFC74E8	rfusca@gmail.com	Chris	Spotts
275	https://www.google.com/accounts/o8/id?id=AItOawnhyqW0JkXnS4Jo7s0iY6D9WX1FpMWo9SY	https://www.google.com/accounts/o8/ud	56A4CB55-DD57-46F0-AEDF07C566470986	luish.faria@gmail.com	Luís Henrique	Faria
276	https://me.yahoo.com/a/1NhmrdoorJIp92p7vsmQuj9LwKsDP7cNSg--#3ec1a	https://open.login.yahooapis.com/openid/op/auth	0F02DEB0-2CC1-4A2B-BBFB15860E6D1943	mail2nil_123@yahoo.co.in	\N	\N
277	https://www.google.com/accounts/o8/id?id=AItOawkK8T37A9ayqf1C50XzjZlgiGPgT2x8HvM	https://www.google.com/accounts/o8/ud	4A7C7BDE-9E6B-4B7A-9A1FAAA641BCCE39	philip.zeyliger@gmail.com	philip	zeyliger
278	http://www.google.com/profiles/10manju	https://www.google.com/accounts/o8/ud?source=profiles	C24F7AA4-5AFB-4922-917A4C8491C1D6D8	10manju@gmail.com	Manjunath	b
280	https://www.google.com/accounts/o8/id?id=AItOawk3dQpx8Yc5q2bgCEEcM9OStLbq7f4FUnI	https://www.google.com/accounts/o8/ud	34D3CF7E-3CDE-48F3-8E6136DFB606A5A1	rhushikesh.naik50@gmail.com	rhushikesh	naik
281	https://www.google.com/accounts/o8/id?id=AItOawlWt8MNLaIlbNOdJBRQVgzxS9nwdrftuGE	https://www.google.com/accounts/o8/ud	CDD2A747-788E-45B7-88279D6BD9C86EBA	libfolder@gmail.com	Lib	Folder
282	https://www.google.com/accounts/o8/id?id=AItOawkElJ3dTT0lN5NFzGoQ4if__C47302ns48	https://www.google.com/accounts/o8/ud	E0451A04-52E9-49D8-A56B2B218F915409	ra102800@gmail.com	Rodney	Adams
283	https://www.google.com/accounts/o8/id?id=AItOawngAfzN5ewNIdxP5uvgRHGJJbPJ6rJHBbA	https://www.google.com/accounts/o8/ud	16E8F690-9B1D-4102-B5741CBC84BD5D4C	bitwiseman@gmail.com	Liam	Newman
284	https://www.google.com/accounts/o8/id?id=AItOawmt73qn5j_wZqD1T2J-v9rgKHjMhyHpyJc	https://www.google.com/accounts/o8/ud	530AAB7A-CCF9-4F4B-8D01D39C3C09AA06	jesse.r.mejia@gmail.com	Jesse	Mejia
285	https://www.google.com/accounts/o8/id?id=AItOawnSaZQDkz3eUWbCw1-DLLUCNcZM4h_iCZ4	https://www.google.com/accounts/o8/ud	C387AC26-5FF4-453B-A80BDFFC0817BC36	robertkaucher@gmail.com	Robert	Kaucher
286	https://www.google.com/accounts/o8/id?id=AItOawk1a6nF9lNVqCFhG0D6_jIwkJ7TBPVLdzg	https://www.google.com/accounts/o8/ud	F2851A32-C3A5-463A-99B7A843C61E72D6	juergen.aschenbrenner@gmail.com	Juergen	Aschenbrenner
287	https://me.yahoo.com/a/zQgImokUwfaNgKuzcVKrooAZ1q_OYS.B037JTZOztVcUCm27Gg--#0a1fe	https://open.login.yahooapis.com/openid/op/auth	0483F97D-9A0C-4216-98EC9934E32F4E8A	sintu1thinking@ymail.com	\N	\N
260	https://www.google.com/accounts/o8/id?id=AItOawnjw-1Vfy0N5CSkQjOyDpoONlFMWtG0R6Y	https://www.google.com/accounts/o8/ud	32DFDB53-2F2A-46B3-A8B84CEAA1FFC886	scorpian140907@gmail.com	shashi	shekhar
290	https://www.google.com/accounts/o8/id?id=AItOawkcTPLbSX4Eo6xo0maU4n7nGSRpS9UQPz4	https://www.google.com/accounts/o8/ud	6C99B87F-AB65-4DAA-8C64F708BEC549D1	martin.meridius@gmail.com	Martin	Lukeš
291	https://www.google.com/accounts/o8/id?id=AItOawn7RDPrzvqO8s6Ea8cFm4o7cD8X_U528lU	https://www.google.com/accounts/o8/ud	69F5C922-40A9-45D4-AB454FEA27978DF1	prasadniharika22@gmail.com	Niharika	Prasad
295	https://me.yahoo.com/a/fntSmEUA3J8LVc6WUAViP1OIN7C1tSiaMYc-#c319b	https://open.login.yahooapis.com/openid/op/auth	4515C4CD-9496-4614-AD364631157AC012	slowprocessor@yahoo.com	\N	\N
293	http://nirmeet.myopenid.com/	http://www.myopenid.com/server	BA69CE56-846E-4408-BBCABA942D9A3204	\N	\N	\N
296	https://www.google.com/accounts/o8/id?id=AItOawmcMuyhMyWtb9P8C9OzkGUz6yNw6wbQ3KI	https://www.google.com/accounts/o8/ud	E277EEDF-BC4A-442A-A48BC129AA6245F1	asmuri.anwar@gmail.com	Asmuri	Anwar
297	https://www.google.com/accounts/o8/id?id=AItOawm-sCte6qCtR2okII8I1-YHkbHpg5lySrU	https://www.google.com/accounts/o8/ud	7C72445E-F27E-4708-9E9389AA563E3639	himalaya.dua@gmail.com	Himalaya	Dua
298	https://www.google.com/accounts/o8/id?id=AItOawlXh2PEJZWtrdWu-eo6aDLtLX5sZG1Q-Us	https://www.google.com/accounts/o8/ud	5E2EDE91-D204-471C-BA675C81B212B54C	aidan.feldman@gmail.com	Aidan	Feldman
299	https://www.google.com/accounts/o8/id?id=AItOawnnejC8037w9JxKMek5_wvYZNNi2Is0iKY	https://www.google.com/accounts/o8/ud	817EBE5A-E330-4563-8ED72095329F41A7	mchunn@gmail.com	Michael	Chunn
302	https://www.google.com/accounts/o8/id?id=AItOawlQHJSFPXjLBNz08O1a5UudfEpFQSeQWxU	https://www.google.com/accounts/o8/ud	E202A81D-6D85-4EE9-A9D376CC01EFACFC	quijada.serrano.luis@gmail.com	Luis	Quijada Serrano
270	https://www.google.com/accounts/o8/id?id=AItOawltJOfcF-tX_hulDCqoZKeeot78vDcZ4_A	https://www.google.com/accounts/o8/ud	BC84BB76-6F33-4F95-BBB5716BE470E8FA	amitisprince@gmail.com	Amit	Krishna Kumar Singh
300	https://www.google.com/accounts/o8/id?id=AItOawmBe751x5tXJKWVJKRiANf7wlKgiSHKJmA	https://www.google.com/accounts/o8/ud	3750E377-5AF0-4673-A9B836B3727FDFAD	jarnebeutnagel@gmail.com	Jarne W.	Beutnagel
301	https://me.yahoo.com/a/YexJ53swrZ3MvKMvnVgh4EY8IhaQD40oIeTxnkV_5w--#d5837	https://open.login.yahooapis.com/openid/op/auth	0BB9C826-7075-4F01-8FA5DF8974EBA3BA	capacitor.resistor@yahoo.com	\N	\N
303	https://www.google.com/accounts/o8/id?id=AItOawmNhqDyapJfwe5jvHFBgckZlXwsoxf5J4o	https://www.google.com/accounts/o8/ud	32A11F3B-CF13-4A8C-832F0750D22B6653	isdartur@gmail.com	Артур	Гальма
304	https://www.google.com/accounts/o8/id?id=AItOawlr3JS52GFdczyk3RLoPFsc8UYS-wd4ISk	https://www.google.com/accounts/o8/ud	686D6AE9-C69E-4B12-968BF2D010832CCF	itimeheke@hot.ee	Kristian	Heljas
305	https://www.google.com/accounts/o8/id?id=AItOawmx-Z8Z6dBa1vtUCklQ3OWGTtaA68Agoj4	https://www.google.com/accounts/o8/ud	AB0A736A-AAEE-4CEA-862C1BFB0A68071E	andreu.alcon@gmail.com	Andreu	Alcón
306	http://anthony.derobert.net/	http://www.myopenid.com/server	BF8C08FE-59EE-431A-8DBDECEBD78E359D	\N	\N	\N
307	https://www.google.com/accounts/o8/id?id=AItOawlzf13ZgsdTcfvsnbG12iGf0jUAdf_--qA	https://www.google.com/accounts/o8/ud	B8BEEBEA-4113-4A09-BDB21515CD278FBA	naftalilubin@gmail.com	Naftali	Lubin
308	https://www.google.com/accounts/o8/id?id=AItOawm9qoJD2pfHGZGMvXMWDAJOnsPHVt0QdoE	https://www.google.com/accounts/o8/ud	CC4FACEC-D7B0-46A2-87DDDB5D00A83465	carvajaldiazeduar@gmail.com	Eduar	Carvajal
309	https://www.google.com/accounts/o8/id?id=AItOawnIZtsGPqNC3gqPeX0SEwEW0dqrMyxrwZU	https://www.google.com/accounts/o8/ud	31A82C66-1287-4FC8-BB289F97AAA5F1C5	mangeshnaiknaware@gmail.com	Mangesh	Naiknaware
311	https://www.google.com/accounts/o8/id?id=AItOawm_o30lRWIshfBI9uikzw9nP-lxPVfRYFA	https://www.google.com/accounts/o8/ud	F38E9B90-A97F-4D0A-B5C81F8B8D828821	cuan.alan.thompson@gmail.com	Cuan	Thompson
312	https://www.google.com/accounts/o8/id?id=AItOawlsPUXX7ZGOctNdYL13tP55ZH_hBi2sJ64	https://www.google.com/accounts/o8/ud	3AC5D5B8-73B1-47E4-A8DE60D173998FD2	joey@thehomestarmy.com	Joey	Smith
313	https://www.google.com/accounts/o8/id?id=AItOawmUjvR8tGw51qY-x_t091CZIyAUVy4atTc	https://www.google.com/accounts/o8/ud	A96E291D-A7E5-44DC-8CC6E36808E17B57	mangeshn25@gmail.com	Mangesh	Naiknaware
314	https://www.google.com/accounts/o8/id?id=AItOawnhHo93MzYfuAdmOnuKo_sCSud0ms9AzZA	https://www.google.com/accounts/o8/ud	1BDAC204-B735-48E1-AF58B35503D9BD62	prajapatineha17@gmail.com	Neha	Prajapati
315	https://www.google.com/accounts/o8/id?id=AItOawlDuvqiuwZTQYm4Q09FXnEM2cwog4oAKAY	https://www.google.com/accounts/o8/ud	5ED66415-43A3-4ABD-8A30C9F479C48BFD	sumskyi@gmail.com	Владислав	Сумский
317	https://www.google.com/accounts/o8/id?id=AItOawlf-nURF3dIi3lxeQyasDCl0iCTqWD1SCU	https://www.google.com/accounts/o8/ud	B7306747-599F-4806-96B24C2CEADA66A3	admin@ba-cafe.com	שי	מרגוליס
318	https://www.google.com/accounts/o8/id?id=AItOawnBnjMaN525oK92WiiX-RYJR41BKDq76j4	https://www.google.com/accounts/o8/ud	6BCD7DB0-9E98-44BE-97CC47E2F4C5FBEA	sintu1thinking@gmail.com	Sintu	Roy
319	https://www.google.com/accounts/o8/id?id=AItOawlX33-8ereDtCynBGubQEBUrCeVF76-pLA	https://www.google.com/accounts/o8/ud	1C5D2EF8-703F-4B71-BF2F279202329CE9	adam@kikoo.co.uk	Adam	Hodgson
320	http://ambekar-neha21.myopenid.com/	http://www.myopenid.com/server	139776B9-A3DD-499D-861ECCF46C9EF99B	\N	\N	\N
321	http://krithish.myopenid.com/	http://www.myopenid.com/server	E5D17501-B50F-4E76-82EAFFCEC4A6F0C0	\N	\N	\N
322	https://www.google.com/accounts/o8/id?id=AItOawkaNLuh8Rrvze-P3Q_gkeifVONyBoWeiqY	https://www.google.com/accounts/o8/ud	ED64F75F-6B7B-453C-8D45C160667CF622	v1dnoe@mail.ru	\N	\N
310	https://www.google.com/accounts/o8/id?id=AItOawmaov6H7lHleaciKNduoOHLwD9MMzQli_M	https://www.google.com/accounts/o8/ud	F7DC568C-6772-4E29-9202EA9CC977DC71	ashwinv09@gmail.com	Ashwin	Venugopal
323	https://www.google.com/accounts/o8/id?id=AItOawkMggTJG5xETkmaeE9kTA0eG4EhL8FlZMs	https://www.google.com/accounts/o8/ud	A7660300-5143-47A0-82C5DA57C271E963	ferlegend@gmail.com	luis	Fernando
324	https://me.yahoo.com/a/12BNGkZ2goWpoQJJo3OiWrvmGkDuu4xYzw--#f74cd	https://open.login.yahooapis.com/openid/op/auth	E418C1AE-1B4C-467F-AC03C3C4B15D19B4	diegoreyes84@yahoo.com	\N	\N
325	https://www.google.com/accounts/o8/id?id=AItOawkoV1g_tEw04hOUauO2wY4Y1xyH2y1jElI	https://www.google.com/accounts/o8/ud	F252C8B3-5C5C-452E-98ED36DDE9DB76A8	javiermauricio.toledo@gmail.com	Javier Mauricio	Toledo
326	https://www.google.com/accounts/o8/id?id=AItOawl3qcbW8OX1CLMGR9xpe1WKzEWyJxX_kf0	https://www.google.com/accounts/o8/ud	ACC8A198-5325-4240-A549E6AE3E12A773	henry.alvarad007@gmail.com	Henry	Alvarado
327	https://www.google.com/accounts/o8/id?id=AItOawkZdgTKdfvz8lsVYRPUy0tEIylBpnodF3E	https://www.google.com/accounts/o8/ud	9F4E1171-B912-4B67-9A4B22EEF9831EC1	rc.spitfire@gmail.com	Raúl	Coto
328	https://www.google.com/accounts/o8/id?id=AItOawmUqN0VeQktAGFRXJqQo861xsIxQN0iD5o	https://www.google.com/accounts/o8/ud	EBE59487-2F12-4E50-BF9540DB63D19DFE	juanpineda1987@gmail.com	juan	pineda
329	https://www.google.com/accounts/o8/id?id=AItOawkOWYRiTqFxYO_wiB3efIHM-R4fcQiW0Mw	https://www.google.com/accounts/o8/ud	71D1FA7A-3BBE-4D65-9D648A9C957BF6B0	markos8m28@gmail.com	Marcos	Marroquin
330	https://www.google.com/accounts/o8/id?id=AItOawmRaxAEhKQf7Auje2XpNu7_MxkYZXZqUPQ	https://www.google.com/accounts/o8/ud	45BA0996-2C47-4087-B81BB8EFD4379948	yariperez23@gmail.com	Yarina	Pérez
331	https://www.google.com/accounts/o8/id?id=AItOawnTHPJJqj12MgjjgVRm2N3NXl-As2XTo4U	https://www.google.com/accounts/o8/ud	117912F1-06CB-4AB4-AAFE838340D396AC	vitoly1@gmail.com	vitoly1	s
332	https://www.google.com/accounts/o8/id?id=AItOawnSSgufSJ6M_6kE1hcAqwRroJX-B9-K_54	https://www.google.com/accounts/o8/ud	81E8AD8D-316E-451D-B1092E1BA4A6884B	arnoldogarciar@gmail.com	Arnoldo	Garcia
333	https://www.google.com/accounts/o8/id?id=AItOawnZ5su1gXAF1Qtqf53upVrR8zMzaFMrifY	https://www.google.com/accounts/o8/ud	63577163-779D-4B00-8AF1D6111FEF8162	cleon@gisystemsint.com	Cristian Agustini	Leon
334	https://www.google.com/accounts/o8/id?id=AItOawnAfRhuQXFz__rmlWC1rX4mX4FxvsLmHRU	https://www.google.com/accounts/o8/ud	3C33FF1E-2B89-46E6-A393CFCC2762CB18	konker87@gmail.com	Juan	Francisco
335	https://www.google.com/accounts/o8/id?id=AItOawktCN0gX0n1lxiinG1lAugU3eUiJIqC96c	https://www.google.com/accounts/o8/ud	A550AF2D-E5C6-4FF6-9B22C280196E57E6	henry.salvatierra@gmail.com	Henry	Salvatierra
336	https://www.google.com/accounts/o8/id?id=AItOawlhENRejh5gvkI5ZG8cXgQ6_lXwu-jpIoA	https://www.google.com/accounts/o8/ud	DA9DE97D-448B-4458-839C8501FC7F6337	jonathan.diazr@gmail.com	Jonathan	Diaz
6	https://www.google.com/accounts/o8/id?id=AItOawkZL7SBwnHxW6UQl8OothYM3dElmuqhpEM	https://www.google.com/accounts/o8/ud	36F1B7DC-B44D-407F-9A41F39CB4DEE613	ypercube@gmail.com	Yper	Cube
337	https://www.google.com/accounts/o8/id?id=AItOawkdhHJrgG151GDmj-opfLqoyskWRPYrorg	https://www.google.com/accounts/o8/ud	2A13F38C-674F-4E3B-A1114192B5C67E41	joshwap@gmail.com	Jorge	Solis
338	https://me.yahoo.com/a/twwm63F.35WS1QowH4J_0rXyg7..#84940	https://open.login.yahooapis.com/openid/op/auth	E260A270-3B3B-4D10-B9F986B0CEE3AA4D	nuevo654@yahoo.com	\N	\N
355	https://www.google.com/accounts/o8/id?id=AItOawljm720NHUyqTb2r5KR0g5XNLD6HtRLn18	https://www.google.com/accounts/o8/ud	66C65E5A-6A47-4912-B554B86455FEF876	carlomagnor@gmail.com	Carlo	Regalado
294	https://www.google.com/accounts/o8/id?id=AItOawkN9cFgK9rW7xLcT9DLCuQFZkGTCrJlqkM	https://www.google.com/accounts/o8/ud	CB7C0700-8FA5-472C-9ECAF34095E409CE	tsankarasubramanian@gmail.com	Sankara	Subramanian
358	https://www.google.com/accounts/o8/id?id=AItOawmhSoyCy98hhk-oG60yiqgT8u_F1ts77TI	https://www.google.com/accounts/o8/ud	4A22AA44-A3D5-40FA-BFBB50F71DAEB15F	mybrainz@gmail.com	Gwang Min	Kim
359	https://www.google.com/accounts/o8/id?id=AItOawkY4B0lDi9NYrDeiOMGWUysvAeMf8_LU2c	https://www.google.com/accounts/o8/ud	25D41E5F-EDB4-4E4C-B0DDBFC675015D19	tovhanu@gmail.com	Sailadhirajendranath	Kayal
360	https://www.google.com/accounts/o8/id?id=AItOawnsS9hYJMVzVEIl8HLjgl0pqHiEZhiuMd8	https://www.google.com/accounts/o8/ud	AE1420AA-3299-47DF-935531E96812A728	travis.gant@gmail.com	Travis	Gant
339	https://www.google.com/accounts/o8/id?id=AItOawmkjKpUbdbTe-mZ9CGN2fB-31fm8e-gAO8	https://www.google.com/accounts/o8/ud	E2469F9A-6812-4980-969C3519F2AA10E0	principiantesdomingo@gmail.com	principiantes	domingo
340	https://www.google.com/accounts/o8/id?id=AItOawkM52sKbEf_VcXIFbwqJvTGpR3tKG3TkyQ	https://www.google.com/accounts/o8/ud	9708C2C0-B532-4B78-9E7C8BB476C04B21	sendycrisostomo@hotmail.com	\N	\N
341	https://www.google.com/accounts/o8/id?id=AItOawlyEjZOGVeQy6PHHHG9_Xg7QbeZF1Dd0ck	https://www.google.com/accounts/o8/ud	0B4A7E48-C79B-4F47-AE5AF24FDA6B642C	bselvan@gmail.com	burak	selvan
342	https://www.google.com/accounts/o8/id?id=AItOawk38_vX6IX_zTK0jKoXBGCiFdcdF9pzGUQ	https://www.google.com/accounts/o8/ud	BA29FAAA-D8E6-4C80-B0CF463FC78DEA65	r.nivas@gmail.com	Nivas	R
343	https://www.google.com/accounts/o8/id?id=AItOawnrzctTgfIaO1nHVZp10Y0gdLHfEkGvrIM	https://www.google.com/accounts/o8/ud	5BDD26B9-A221-4FF7-ACA0980779C4722C	jfmr17@gmail.com	Fernando	Merida
346	https://www.google.com/accounts/o8/id?id=AItOawmY0WQdqBaFF20CRR04MSDNVvWuAUgEKQs	https://www.google.com/accounts/o8/ud	69CDAAE5-1245-462F-BBCD0E3556C9A24C	rsmailkutusu@gmail.com	Recep	SELLİ
366	https://www.google.com/accounts/o8/id?id=AItOawkLzE0hU0Eey_-gc9zNoGEReckBZMzuMUI	https://www.google.com/accounts/o8/ud	3F8C3751-57F7-47D9-B17F2038AEA431B4	johannesraja@gmail.com	johannes	rara
356	http://matthewlarge.myopenid.com/	http://www.myopenid.com/server	9E92B096-24C7-4EDA-96A2E51427AC7D85	\N	\N	\N
348	https://www.google.com/accounts/o8/id?id=AItOawnRscwHvfUkIylSEqjZ3NgJb733NGl-hcU	https://www.google.com/accounts/o8/ud	E4731289-D724-49B9-BDA3F216D3680077	jdwoo@qintara.com	John Dangcalan	Woo
345	https://www.google.com/accounts/o8/id?id=AItOawmmxwjtXQx9dbjSAeXVesA27TOR85CqpxU	https://www.google.com/accounts/o8/ud	A98370CB-96F9-4EB9-AA611E4CCB6CB244	johntotetwoo@gmail.com	John	Woo
349	https://www.google.com/accounts/o8/id?id=AItOawnjM-iZFKYX8H7_78iVpcK4AtWZ_i3xFpE	https://www.google.com/accounts/o8/ud	E60D8986-F781-44BA-BB02F9792E5344AC	thomas@gielfeldt.com	Thomas	Gielfeldt
350	https://www.google.com/accounts/o8/id?id=AItOawnfAO5JKPeyl7riPUEh326kQi3MTosqD-Q	https://www.google.com/accounts/o8/ud	2E9244F6-ED7E-45D3-AE942B8C38D8513C	nicholaskrasnov@gmail.com	Nikolay	Krasnov
351	http://ruslansagitov.livejournal.com/	http://www.livejournal.com/openid/server.bml	7A458820-6091-4C70-BA6682BD0644B7BF	\N	\N	\N
218	https://www.google.com/accounts/o8/id?id=AItOawkwgoGwG5XKYKXBwU32f9xeTn5GqLCvFvw	https://www.google.com/accounts/o8/ud	58889A88-71F2-4119-AA31A83C07FC7A77	peretta3x@gmail.com	Rafael	Peretta
352	https://www.google.com/accounts/o8/id?id=AItOawkF2knt8MjTGKQjzDg0R3TCwR2vnunbI0c	https://www.google.com/accounts/o8/ud	FD340D01-97AD-4F59-8ACC198F75987AD9	daniel.james.nd@gmail.com	Daniel	Noel-Davies
353	http://kashkns.myopenid.com/	http://www.myopenid.com/server	336741D0-8EF0-41B8-9C219B8418F59341	\N	\N	\N
354	https://www.google.com/accounts/o8/id?id=AItOawn44cS5DcgHGdj5OX19fdy0XIzj8GXES9Y	https://www.google.com/accounts/o8/ud	F929B386-5D8F-4A0F-A7A2A59805DDE04D	josh.vankley@gmail.com	Joshua	Van Kley
361	http://ysridhar11.myopenid.com/	http://www.myopenid.com/server	678821EC-3C33-4797-A58353BD0F913EA1	\N	\N	\N
362	https://www.google.com/accounts/o8/id?id=AItOawlp1_bMn3WfIy6gdFnUzQyRJR4mfDvovuE	https://www.google.com/accounts/o8/ud	73B52859-36D9-4CA2-8222961B0704DA06	joao.c.batista@gmail.com	João	Batista
363	https://www.google.com/accounts/o8/id?id=AItOawkamIcrnpaf94k1Pl8-yh85Mnnh2dwhIe8	https://www.google.com/accounts/o8/ud	37C0CAF7-6B83-4715-BE980725BCAA6560	nesrait@gmail.com	Davide	M.
364	https://me.yahoo.com/a/6Ff7d0ECqM4iLXuaf4DLwI6ybrsVCQ--#f67c2	https://open.login.yahooapis.com/openid/op/auth	9C10D8AE-DCA1-492A-A79366F148D2AD37	swapan_dr@yahoo.com	\N	\N
365	https://www.google.com/accounts/o8/id?id=AItOawk97VDsJ3YPrgqTCJ5rCOg58MHfXifw7NU	https://www.google.com/accounts/o8/ud	4E409A72-2325-4842-A762DBE94B85C34F	graimer@gmail.com	The	Graimer
367	https://www.google.com/accounts/o8/id?id=AItOawmq9o5l-JL6Ysd0rwiu91fXE8aH8Zpn0rI	https://www.google.com/accounts/o8/ud	E854260F-9114-4166-B044FA36241993A9	madhumitha.siva@gmail.com	Madhumitha	Sivaraman
368	https://www.google.com/accounts/o8/id?id=AItOawlxkEWwk9M-2YcQEb9T2RYeXq9oSED4hBY	https://www.google.com/accounts/o8/ud	99E1E446-9998-496B-A5DDD8FE97E8A534	flpgdt@gmail.com	Filippo	Gadotti
369	https://www.google.com/accounts/o8/id?id=AItOawnpEledsLEcLkY-3WQHRTamdQHAK4VhrKM	https://www.google.com/accounts/o8/ud	822A18C4-59C7-4E56-92109E0B40F5B27D	geordee@gmail.com	Geordee	Naliyath
347	https://www.google.com/accounts/o8/id?id=AItOawkzxmYK3R03yF4Q9-JBP4mHEEsI8uf-w28	https://www.google.com/accounts/o8/ud	CC1E05D2-5141-41C9-B59340548B7AC95A	desanze@gmail.com	Mariano	Desanze
370	https://www.google.com/accounts/o8/id?id=AItOawmzH1FkbRptmyZ2iOimLSUpjj2pbSj_oUE	https://www.google.com/accounts/o8/ud	A91B0FDD-2F61-4BD7-AF5701A777871D5C	eric@aquameta.com	Eric	Hanson
371	http://bignose.whitetree.org/	https://pip.verisignlabs.com/server	695563F8-94AB-48E9-A8F1C8AB5BB86CE7	\N	\N	\N
372	https://www.google.com/accounts/o8/id?id=AItOawn-6DC9VmCP74Dnxo-5G-F31SUUy2gDyNQ	https://www.google.com/accounts/o8/ud	EDF89789-5471-4E48-8E4A14D6BB383278	robertkaucher@gmail.com	Robert	Kaucher
374	https://www.google.com/accounts/o8/id?id=AItOawnrZVlQu-7XkMZNcKd_8tKx2Ygpc-q9y18	https://www.google.com/accounts/o8/ud	A8D84318-FB60-460C-87F7D83266017D62	azhar@iarmar.com	Ibrahim	Azhar
375	https://www.google.com/accounts/o8/id?id=AItOawltmHt4cYy3lBjMsa8CXV6Yg_NMCwOqBew	https://www.google.com/accounts/o8/ud	6F6052A8-F3A4-413C-9EC409A1318E7820	999arjun@gmail.com	arjun	cc
376	http://kengimel.myopenid.com/	http://www.myopenid.com/server	89110BF9-3B2E-49B1-8622CEDA71AA48DC	\N	\N	\N
377	https://www.google.com/accounts/o8/id?id=AItOawm7NksogzgrAyss1Wbgapr6zfCGvPPu9AA	https://www.google.com/accounts/o8/ud	EEE99DCD-E413-497F-850B07C8FEB4EBD4	avinash007patil@gmail.com	Avinash	Patil
378	https://www.google.com/accounts/o8/id?id=AItOawnA7J9dZWWIfeicbPlxWBvFmb0FlLnDUko	https://www.google.com/accounts/o8/ud	3CA7BF58-7232-4952-ACB3F535DD8BE392	avinashppatil87@gmail.com	Avinash	Patil
316	https://www.google.com/accounts/o8/id?id=AItOawmI-jVFGEcpIzrYr7oDwT8yUg9OdqjE77A	https://www.google.com/accounts/o8/ud	19ED57C7-A233-45C7-8B424D1A0E89E340	mtucci25@gmail.com	Michael	Tucci
357	https://www.google.com/accounts/o8/id?id=AItOawnSlRwGapUJvLVGnOiXIiiDeHOtOGSbyu0	https://www.google.com/accounts/o8/ud	ACEA1D31-0AEB-4E33-883B7951E41591D5	norbert.bous@gmail.com	Norbert	Bous
379	https://www.google.com/accounts/o8/id?id=AItOawmmQFE-GYywp7gVSwj5bJIYf6gN79BtSHQ	https://www.google.com/accounts/o8/ud	E6A51FBD-1713-4069-88D3F4C5363F5259	ron.nitzsche@gmail.com	Ron	Nitzsche
380	https://www.google.com/accounts/o8/id?id=AItOawlA4BQ-7I8zqo32RhJYZ8HpwUm4q-4u0sw	https://www.google.com/accounts/o8/ud	3DCFB385-D7FB-4A1D-BEF73FBA71F3E82D	jfeasel@gmail.com	Jake	Feasel
399	https://me.yahoo.com/a/PLYTHjM01d9sGVvOns54hM0kz1Xd0SY-#9fb13	https://open.login.yahooapis.com/openid/op/auth	B40D2E56-9B10-4B2B-955B0FA8B1A0EADA	pete_oakey@yahoo.com	\N	\N
373	https://www.google.com/accounts/o8/id?id=AItOawm-TbbJ2SWrQg3SF6paC4Zep5PW1n6HTCE	https://www.google.com/accounts/o8/ud	BE24E007-3E19-4706-BC507AE730A8EE85	dhreugh@gmail.com	Jarne	Beutnagel
381	https://www.google.com/accounts/o8/id?id=AItOawnUQ6ynXdsIDbOWieRDHxiVEERrmfvgbmo	https://www.google.com/accounts/o8/ud	7484232D-465A-434C-BE5AC515FB6BE35E	farnabaz@gmail.com	Ahad	Birang
383	https://www.google.com/accounts/o8/id?id=AItOawmxnl-UyVwZbyW36yTi5jBsnsCINg04ezE	https://www.google.com/accounts/o8/ud	74A219B3-E159-490F-BC651AA3A3CFEB34	jwmnisi@gmail.com	John	Wisani
384	https://www.google.com/accounts/o8/id?id=AItOawlE-nhNO6RKC_JZ0wOujvgGAVAJRgs3ZNY	https://www.google.com/accounts/o8/ud	9A877786-F8A4-46C8-B8250379BF91C090	ladelschikov@gmail.com	Иван	Ладельщиков
385	https://www.google.com/accounts/o8/id?id=AItOawmjHUBv3qn-9IH-DT7r7cPgYC7Lxu5x5nQ	https://www.google.com/accounts/o8/ud	8550F52A-0F39-4D11-B5095CBC4B1310FD	pmatuszewski999@gmail.com	Paweł	Matuszewski
386	https://www.google.com/accounts/o8/id?id=AItOawmKPR9ojK-oeUylVAxZhiVSU-ovamb6YnU	https://www.google.com/accounts/o8/ud	576C50B8-9998-4B09-A7BCD4299861680A	savef5@gmail.com	Пётр	Ермаков
387	https://www.google.com/accounts/o8/id?id=AItOawkavCTkr_0CqPWw4S2mkNISTovLgVmfCe0	https://www.google.com/accounts/o8/ud	BFE56DB5-7623-408E-85CC46B72FCE80FF	insside@gmail.com	Тіма	Маслюченко
389	https://www.google.com/accounts/o8/id?id=AItOawmvip-mUUeoz_77D74yhNLtyE6N9LJE9bg	https://www.google.com/accounts/o8/ud	C5630947-6279-45D6-BD6F53CF6B4C51AC	danielciulinaru@gmail.com	Daniel	Ciulinaru
390	https://www.google.com/accounts/o8/id?id=AItOawm5QpFTq54pmKXWDz4qGAINxeLp70fENEA	https://www.google.com/accounts/o8/ud	3EF3D455-1182-413B-9A20B50E132B4F67	johnyu2@gmail.com	John	Yu
391	https://www.google.com/accounts/o8/id?id=AItOawliR_3r9UFEyzw3f2epOoslji6pfaigf6A	https://www.google.com/accounts/o8/ud	7690F158-1757-4250-91929B0EC1778C34	jimmymj@gmail.com	Jimmy	Jose
392	https://www.google.com/accounts/o8/id?id=AItOawkNGFIwvBk1vy67A2jh8KXk9MZ3VKzZTyM	https://www.google.com/accounts/o8/ud	AA28928A-5602-48EB-841843EC4BE022F9	gaurav.varshikar@gmail.com	Gaurav	Varshikar
388	https://www.google.com/accounts/o8/id?id=AItOawlzFctQ-VftmYI-JmVlMMmu_08cdCVp-SA	https://www.google.com/accounts/o8/ud	7BC19C33-BC9E-4DB6-B56F4DA01005592A	srcnckr@gmail.com	Sercan	Çakır
394	https://www.google.com/accounts/o8/id?id=AItOawkpTxleitUGatGgs02BR-qLMhepCxDwV_M	https://www.google.com/accounts/o8/ud	43F6FEE3-CCD1-44A3-B0650F7DD1D9131F	jurg@skimlinks.com	Jurg	Schwalb
395	https://www.google.com/accounts/o8/id?id=AItOawk1cPNX37PSlRoVZEeOAmHLmt32eFn8I7w	https://www.google.com/accounts/o8/ud	BFE9A9BE-DF21-48BA-B73376A640820014	mikegrahamjones@gmail.com	Michael	Jones
396	https://www.google.com/accounts/o8/id?id=AItOawljuHU5JYXN-FRNfRzDm2GYGN6UUIaTQAg	https://www.google.com/accounts/o8/ud	A7B7DFD1-B692-44D5-8F374CEC383F0418	seraphimg2@gmail.com	Sofiane	Merah
397	https://www.google.com/accounts/o8/id?id=AItOawlrwc-meNBXC06imzkCrl_xng858Yv6Rdk	https://www.google.com/accounts/o8/ud	277FA894-297E-41FC-914C2B341088C298	aj.piscitelli@gmail.com	AJ	Piscitelli
398	https://www.google.com/accounts/o8/id?id=AItOawnNrucVeQ2EXxk91_sdH4iDqI5a-sP1UFQ	https://www.google.com/accounts/o8/ud	2333D861-D7B9-439B-91F6DAD427AB7096	jbunio@calliduscloud.com	Jonathan	Bunio
400	https://www.google.com/accounts/o8/id?id=AItOawkivyZLNc4w9Kho4gHVqLPqQ-a08PfQMc0	https://www.google.com/accounts/o8/ud	A0ACB66E-6FAF-4050-8FB37EB1F1A296E7	fedmich@gmail.com	Federico	Garcia
401	https://www.google.com/accounts/o8/id?id=AItOawlLcJC6yispiTEIhUVHeIL3tjRR3vGPkxU	https://www.google.com/accounts/o8/ud	CD4E5BC7-C6C4-4F8B-B481A91E80FA4372	carlos.daniel.ff@gmail.com	Carlos Daniel	Flores Flores
402	https://www.google.com/accounts/o8/id?id=AItOawmsS4VBCcpgPknWH_MpZYOk1SZ3V5Wl8MQ	https://www.google.com/accounts/o8/ud	53880C93-D494-4A43-9BD3F034FA7AC00E	ravishroshan@gmail.com	Ravish	Roshan
403	https://www.google.com/accounts/o8/id?id=AItOawlhunsMWfQR5L7uz9e1NdUmsoU8B5h6pjE	https://www.google.com/accounts/o8/ud	25F20329-5234-44BE-88692440EBA2E158	matija.lokar@gmail.com	Matija	Lokar
404	https://www.google.com/accounts/o8/id?id=AItOawl4-qxdWpk8osG8cdVQC2ifummdJSohl9k	https://www.google.com/accounts/o8/ud	C64F2607-EFE9-4DF4-9EE4E2FB85E86B00	mdmerveille@gmail.com	mamoudou	diallo
393	https://www.google.com/accounts/o8/id?id=AItOawm3sr_F8wTsMwhxlDIH4iBAELYUvfBr-DM	https://www.google.com/accounts/o8/ud	212E5A04-31A7-4410-9A5CE96488C80481	quijada.serrano.luis@gmail.com	Luis	Quijada Serrano
406	https://www.google.com/accounts/o8/id?id=AItOawkIhulVkZMsnW9F6hZgkyg1L_TywIZ31lE	https://www.google.com/accounts/o8/ud	13ECC59D-905D-4AB9-A9C570D9374505DD	whatisthebigpicture@gmail.com	Justin	Davis
407	https://www.google.com/accounts/o8/id?id=AItOawkTEQ1AVEkSn2L2uQImG5kJJiRpciDxCnw	https://www.google.com/accounts/o8/ud	85D72B02-91B8-4934-81532903EE3F9A3C	kranti1618@gmail.com	kranti	kumar
409	https://www.google.com/accounts/o8/id?id=AItOawl_wu-WFLSnQSfa2NClmN0CBg6xQsSQpDg	https://www.google.com/accounts/o8/ud	5FF7F1E9-A807-4CBE-86758C808ADD59D4	sagarjauhari@gmail.com	Sagar	Jauhari
410	https://www.google.com/accounts/o8/id?id=AItOawlWshKGoT-WRr8oNDBYwQ82B6ZAwfydQ8I	https://www.google.com/accounts/o8/ud	A6E6EC64-E0C8-4A81-B125C7917B092338	shashankshakehar@gmail.com	Shashank	Shekhar
411	https://www.google.com/accounts/o8/id?id=AItOawkQLnp7HSmsdVf6uAZ8H7cQVDcq6AeGBRU	https://www.google.com/accounts/o8/ud	3CC4F0B0-0F24-46CC-86572B00F489335B	nicholaskrasnov@gmail.com	Nikolay	Krasnov
412	https://me.yahoo.com/a/ab0Z13dsq91Ay_MsOftnhmHwNLVLbA--#41d88	https://open.login.yahooapis.com/openid/op/auth	67D1DC4F-5D7F-42B2-ADBF895E0257A488	sarumoina@yahoo.com	\N	\N
413	https://www.google.com/accounts/o8/id?id=AItOawkE1ULF3k6qO8an_YiNf8X7lE0Z3KZZivY	https://www.google.com/accounts/o8/ud	1FE5B13D-57F2-4FB7-AD0AEC9D14ED4A6D	kranti1618@gmail.com	kranti	kumar
415	https://www.google.com/accounts/o8/id?id=AItOawmsNGyvDU9rK_jE7jzA0TG4rHZsp8Dtd40	https://www.google.com/accounts/o8/ud	7F6D8CA2-4ADD-489F-BF5AE0B466F6534D	jeroen.bolle@gmail.com	Jeroen	Bolle
416	https://www.google.com/accounts/o8/id?id=AItOawm4al0W-UoYsl1rUagqwgLRAZ_yJJpc1CU	https://www.google.com/accounts/o8/ud	9C98C587-D2E4-4653-BFF627014DEE9CCD	ksnboopa@gmail.com	Sankar Boopathi	Kanagavel
417	https://www.google.com/accounts/o8/id?id=AItOawkzLju6tFEn_9nZefisvrEBMINqhNbhc74	https://www.google.com/accounts/o8/ud	760C7A7B-0F7D-4214-B35F120B88CD554C	shyamilikrishnan.vc@gmail.com	Shyamili	Krishnan
418	https://www.google.com/accounts/o8/id?id=AItOawmzdQ3qVbB0uDJKN6PBebmus6E5tYJib2I	https://www.google.com/accounts/o8/ud	31D41917-6AB6-4E33-B2BBDBA48BD41766	rahul@hostnsoft.com	Rahul	Chordiya
419	https://launchpad.net/~atiruz	https://login.launchpad.net/+openid	28BAB789-826F-4CC8-9446A6DC74A928B8	\N	\N	\N
420	https://www.google.com/accounts/o8/id?id=AItOawnF999Ba6VPKPnNqyUE70dBcrv_NBJRn7Q	https://www.google.com/accounts/o8/ud	2BF611DA-0B53-4278-A4CB0AAAB84CB6BD	maheshvarma.cse@gmail.com	MAHESH	VARMA
421	https://www.google.com/accounts/o8/id?id=AItOawnB_5iTQNn267ynsvch4bTpSxbEg7hygek	https://www.google.com/accounts/o8/ud	1DC26CEB-ACB8-45C7-B6DF8DF9DBE9F4A4	drfznet@gmail.com	Denys Rubén	Flores Zuleta
422	https://www.google.com/accounts/o8/id?id=AItOawm1xTFh1ex4h1WTZvySiXcFlGmqPOuab0M	https://www.google.com/accounts/o8/ud	C6906496-2CD5-439A-96C9298EC47ECE17	billy.braga@gmail.com	Billy	Braga
108	https://www.google.com/accounts/o8/id?id=AItOawldnNUQoVQ8chuHM5v1h2rKaPwoGMztjbA	https://www.google.com/accounts/o8/ud	BBF4547B-90D3-48FB-AEF2C89A93EE04B8	whytheq@gmail.com	jason	quirk
423	https://www.google.com/accounts/o8/id?id=AItOawlAG1_lwshfz2vtZG_WaASLGIXRxMHFJsM	https://www.google.com/accounts/o8/ud	82B2C0C4-AC2A-4579-8A93941DE40EE2A6	dan.bencik@gmail.com	Daniel	Benčík
425	https://www.google.com/accounts/o8/id?id=AItOawmr9f-DfO07toJThftHwb9FhCLLdrJZBgs	https://www.google.com/accounts/o8/ud	2F3F90CF-6DE9-4B1E-A0D04E67FB7BF252	bharat7387@gmail.com	Bharat	Bhushan
426	https://www.google.com/accounts/o8/id?id=AItOawnNGEKbOQIBYBOFeE8LgiiOwXMkZZWbZOQ	https://www.google.com/accounts/o8/ud	DB234451-700E-42FE-A74C0FCC4A0E9F13	randcd@gmail.com	Christopher	Rand
427	https://www.google.com/accounts/o8/id?id=AItOawk_ii1V39Vvt2t61Hm4IZPmzlNtGJ6uNNI	https://www.google.com/accounts/o8/ud	7126D443-6906-46D6-B9E3E8F6DE01BDE7	huzaim2006@gmail.com	Ahamed	Huzaim
21	https://www.google.com/accounts/o8/id?id=AItOawnYwn-ipDkopDmQvzc_npbR85pjjH_LgYQ	https://www.google.com/accounts/o8/ud	6AADC40C-C502-4C7F-9ACC5EDD1B007AA5	tim.schmelter@gmail.com	Tim	Schmelter
428	https://www.google.com/accounts/o8/id?id=AItOawmZu_wLEBxAsjRxMAX2NpxP3lCQxm5feP8	https://www.google.com/accounts/o8/ud	DFFACE6D-4F09-482B-A7D29E38EA666E32	mart7ini@gmail.com	Mart	Ini
408	https://www.google.com/accounts/o8/id?id=AItOawkRkNdRtFzX_sjBQ5WzM2hc5NvqGHhCL8s	https://www.google.com/accounts/o8/ud	E2226405-4611-4231-B5C2C00AC590E490	claudio.santos.ribeiro@gmail.com	Cláudio	Ribeiro
432	https://www.google.com/accounts/o8/id?id=AItOawmAepiSEIkJexJ7zw6wF9JK2I92LL2qeW0	https://www.google.com/accounts/o8/ud	B4793460-356D-42C5-82451C0E59D761F1	brsaweda@gmail.com	Erwin	Brandstetter
429	https://www.google.com/accounts/o8/id?id=AItOawlDMGgtd88fdHubqM_7QJLlWbHk30zDjSU	https://www.google.com/accounts/o8/ud	BCF79B80-F313-456B-AB84E6AAB0F61092	clodoaldo.pinto@gmail.com	Clodoaldo	Pinto Neto
430	https://me.yahoo.com/jayfcox#71d45	https://open.login.yahooapis.com/openid/op/auth	E4A53518-C168-4CFA-A3800E35744DF315	sqrtofone@yahoo.com	\N	\N
434	https://www.google.com/accounts/o8/id?id=AItOawmSn2QkD4bxioavgPaAZoN7VD1u6jbEvSE	https://www.google.com/accounts/o8/ud	17E28D32-B29C-41DF-A9E30B1E650313B8	thuventhiran@gmail.com	Thuventhiran	Govender
435	https://www.google.com/accounts/o8/id?id=AItOawkaQH1gjy3jIyQrCQq4ifk0Wa_sa98UKBk	https://www.google.com/accounts/o8/ud	7A79AEAA-44CF-47D4-A2EFBF1EE55A8256	razanasir.ali@gmail.com	Raza	Baloch
431	https://www.google.com/accounts/o8/id?id=AItOawmEZAOTi5NfGM6E4dcIzPvniZ3-xnnk1SM	https://www.google.com/accounts/o8/ud	17ED18AB-E2E4-441F-BDDE227F97306298	daviestrachan@gmail.com	Davie	Strachan
436	https://www.google.com/accounts/o8/id?id=AItOawlxZ1PYbWYq0Kia5-CY0jyraw4SygTqqdE	https://www.google.com/accounts/o8/ud	5595AFA3-86E3-447F-85697FAE314B7517	Umamaheswari.m@myc2s.com	Uma	Maheshwari
437	https://www.google.com/accounts/o8/id?id=AItOawlQ-FuZYWOw2ZfF0P0nFc0g8RDNFKAXh6A	https://www.google.com/accounts/o8/ud	CFE3E790-A9FD-4866-80B191E9E72C1A74	singh04vishal@gmail.com	vishal	singh
414	https://www.google.com/accounts/o8/id?id=AItOawnYubIafo6NHa9kA790Uqb6X-0tGjMa1LQ	https://www.google.com/accounts/o8/ud	2BAE73E7-D166-41C9-A8D6DF658FCCBEF2	pavtaras@gmail.com	Pasha	Tarasenko
439	https://www.google.com/accounts/o8/id?id=AItOawmYg8X8iOHw7eYo4BisZpKEFCoVLMltVR8	https://www.google.com/accounts/o8/ud	BBACCF46-2E8F-4D4C-917A00402FAE5322	aniket.raut9@gmail.com	Aniket	Raut
438	https://www.google.com/accounts/o8/id?id=AItOawldRuzuDhjG-AiQ5jtUh_k27vijGoDzRKI	https://www.google.com/accounts/o8/ud	74637C0E-BA65-4D1C-921B110F139840B4	sylvain.abadie2099@gmail.com	Sylvain	Abadie
440	https://www.google.com/accounts/o8/id?id=AItOawnjXgvmFgs6-UhYH1-h7ZcwqVQxRmAZRk4	https://www.google.com/accounts/o8/ud	51F06804-ADE6-41D5-B70D915FA88A29B0	pinarpayza86@gmail.com	pınar	payza
441	https://www.google.com/accounts/o8/id?id=AItOawms9iPSAOEzyiNhm8JuPG2yvpBDT6ql6v4	https://www.google.com/accounts/o8/ud	911C52F9-2310-4514-9C7406A2CF90E4E3	cyberkiwi2010@gmail.com	Cyber	Kiwi
1	https://www.google.com/accounts/o8/id?id=AItOawlpCAsDY3QlzBREwY3Gr7AlX3wVMacsCBw	https://www.google.com/accounts/o8/ud	6C05F510-406F-43FF-A8C237ECF55C705A	jfeasel@gmail.com	Jake	Feasel
442	https://www.google.com/accounts/o8/id?id=AItOawk6FB-7yFzRkkS0GbGxUS--5aAhNJ-m_Vs	https://www.google.com/accounts/o8/ud	EA6B0989-4A3C-4C0E-8C823A039A6E9B18	younus.abcoder@gmail.com	Younus	Ali
443	http://birnenjoe.myopenid.com/	http://www.myopenid.com/server	704F0E84-5C89-448E-BE33015093C8184A	\N	\N	\N
444	https://www.google.com/accounts/o8/id?id=AItOawmYuryjJRodzmd0RxEtFoOllJhoUGSM4Co	https://www.google.com/accounts/o8/ud	31FAFB7F-5375-461C-8D6EE7341027CEF3	alexandre.krier@aswat-telecom.com	Alexandre	KRIER
445	https://www.google.com/accounts/o8/id?id=AItOawk7Uzq5Y8PsVvr5JAfcpB5atBWhRS-tEXc	https://www.google.com/accounts/o8/ud	950EB879-683E-486F-9D24E394E952DD93	m@42.am	Manfred	Touron
424	https://www.google.com/accounts/o8/id?id=AItOawlxuprz81GZa7RW8FukZ8vjUKyvId775b0	https://www.google.com/accounts/o8/ud	19F58560-9BFF-42EE-808E97B88591ACEA	barmar1961@gmail.com	Barry	Margolin
344	https://www.google.com/accounts/o8/id?id=AItOawmjNyk98hNbJN557cy7fVfWXBWlVv8i8Ik	https://www.google.com/accounts/o8/ud	DAC046C6-DA18-4C3F-AD31BF8E7580E289	justin.james.cannon@gmail.com	Justin	Cannon
433	https://www.google.com/accounts/o8/id?id=AItOawnCPFRq_RXSWFn4jsuiGUxzUOx8SMO8JT8	https://www.google.com/accounts/o8/ud	734DECEC-7732-4E61-84632F1E75BC0D06	webwilliams@gmail.com	William	Borba
279	https://www.google.com/accounts/o8/id?id=AItOawnlUr49CcCS1-uK-vJaxTH2s7bJ-Ic9P50	https://www.google.com/accounts/o8/ud	7DF2C1BD-C198-4CB7-B337FBF395D33168	10manju@gmail.com	Manjunath	b
446	https://www.google.com/accounts/o8/id?id=AItOawnxC_ne5gX0vJ-hzxip_OAxjKPm2Y3gmTQ	https://www.google.com/accounts/o8/ud	210F073D-27B9-4AA7-9DF4DFE6BA520E44	joel.brown@mooseware.ca	Joel	Brown
447	https://www.google.com/accounts/o8/id?id=AItOawmrwa1YELa2Y5rJE7Zuj2JyePHYKaUpyjQ	https://www.google.com/accounts/o8/ud	1A76AFC0-A9C9-4A4E-BEFAE54766E61DB9	rarkenin@gmail.com	Robert	Arkenin
448	http://sebasucedo.myopenid.com/	http://www.myopenid.com/server	B1C373F8-1D85-4397-B6467D0C6F8EC038	\N	\N	\N
449	http://air4x.myopenid.com/	http://www.myopenid.com/server	A4FFA273-2A2C-42ED-A411376A6BE89277	\N	\N	\N
450	https://www.google.com/accounts/o8/id?id=AItOawnJ1G0AuMES8G53BM0DTtcvHNg8jRs4nnk	https://www.google.com/accounts/o8/ud	CE823CC0-9514-4E07-9BB5D40AE40EC9E7	mgaseries@gmail.com	Mahmoud	Gamal
451	https://www.google.com/accounts/o8/id?id=AItOawko8SHzKNeNck8km43IToBV6IBwSszxd6w	https://www.google.com/accounts/o8/ud	B5576345-7192-4EDD-A4A908D3C428515D	btray77@gmail.com	Brad	Traynham
452	https://www.google.com/accounts/o8/id?id=AItOawmeZt2KuFDqNsdHOHOcmZJ-7U3kok1Rbn8	https://www.google.com/accounts/o8/ud	416A6211-CC48-438C-9CAB76E2EC31CFFA	johnnyvandeberg@gmail.com	John	Huntjens
453	https://www.google.com/accounts/o8/id?id=AItOawkuqsMdp9jE9XwMRENSUiYaYJqS6mV-3fc	https://www.google.com/accounts/o8/ud	9E0F2B11-60C3-45FD-A080AD6DF0927C7E	shalithaw@9696.lk	shalitha	weerakoon
454	https://www.google.com/accounts/o8/id?id=AItOawmb_nnMgsyQL0cframYE1ZhEF9h7fOL3ZM	https://www.google.com/accounts/o8/ud	AF5C68B4-E4DF-44DB-B73DC57DA8A2236F	adam.vegh@gmail.com	Adam	Vegh
455	https://www.google.com/accounts/o8/id?id=AItOawk_hgzVDYhz-EcYdK2T6m2uwqZcTZfaCjo	https://www.google.com/accounts/o8/ud	4521A80E-A2C9-4D3E-969B2EDB8AEF2DD5	shatrurox@gmail.com	Shatrughn	Gupta
456	https://www.google.com/accounts/o8/id?id=AItOawkFG3I1csjQX67_hQjpdfngMYBUhQeKsak	https://www.google.com/accounts/o8/ud	B4D76910-2EA2-446A-B019EBB1F1FECDF2	craig.scofield@gmail.com	Craig	Scofield
457	http://brutsoft.com/	http://brutsoft.com/simpleid/	04EE61F1-5F37-43A5-B711F7FF158F39FA	\N	\N	\N
458	https://www.google.com/accounts/o8/id?id=AItOawkbLjDTCNzzktXYOl4iT8n4kZrvbYLJfy8	https://www.google.com/accounts/o8/ud	6E53BCCA-412B-46FE-A8CEC20D06475B6F	tonylovejava@gmail.com	TonyQ	Wang
382	https://www.google.com/accounts/o8/id?id=AItOawkWy0gX3HKGO61MKBw2d5q3xtdl5y_nmdA	https://www.google.com/accounts/o8/ud	D5639AC5-4ACD-4C50-88F080F1F2FF0CC6	anu.nadar013@gmail.com	Anusha	Nadar
459	https://www.google.com/accounts/o8/id?id=AItOawmbpJeGTPVN46PvISFL414LSMFQnoprFds	https://www.google.com/accounts/o8/ud	4703BEE0-526E-4B88-898FE352B33EF0C7	aplocher@gmail.com	Adam	Plocher
233	https://www.google.com/accounts/o8/id?id=AItOawmStmw3bLQv86JLRAE3mZKCdjHhLU5X8SU	https://www.google.com/accounts/o8/ud	6A3EEBEB-E560-453F-84E00417B6C9EE63	bmoretz82@gmail.com	Brandon	Moretz
460	https://www.google.com/accounts/o8/id?id=AItOawlc9POPTndcxIH_na1XSahloGuMQSCC-iw	https://www.google.com/accounts/o8/ud	941CBE59-DFC9-4831-97E49B4CC5EB097B	jmbertucci@gmail.com	John	Bertucci
461	http://bansalvikas.myopenid.com/	http://www.myopenid.com/server	A07C5AC9-1267-49B8-908B1AAE9634210F	\N	\N	\N
462	https://www.google.com/accounts/o8/id?id=AItOawmfaLuyAs1Ak0ARKzRI-JnlSYBbHY5H2n8	https://www.google.com/accounts/o8/ud	8E22535C-BA4C-4408-B454F6B6228A2F65	maker.plays.ten@gmail.com	maker	plays
463	https://www.google.com/accounts/o8/id?id=AItOawka8MiHMujdSvRW8aw4JMAJh3y_eyxabyE	https://www.google.com/accounts/o8/ud	5C053718-9641-4FE2-882B4F32C88C1AA7	enzoaeneas@gmail.com	Kevin	James
\.


--
-- PostgreSQL database dump complete
--

