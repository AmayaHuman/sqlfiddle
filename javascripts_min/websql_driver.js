window.WebSQL_driver=function(){return this.db=null,this.ddl=[],this.nativeSQLite=window.openDatabase!==undefined,this},$.extend(window.WebSQL_driver.prototype,window.SQLite_driver.prototype),window.WebSQL_driver.prototype.buildSchema=function(e){var t=this;try{t.nativeSQLite?(t.db=openDatabase(e.short_code,"1.0",e.short_code,e.ddl.length*1024),t.db.transaction(function(n){var r=t.splitStatement(e.ddl,e.statement_separator);t.ddl=r;var i=0,s=r[i],o=function(t,a){if(i<r.length-1){do i++,s=r[i];while(i<r.length-1&&s.match(/^\s*$/));s.match(/^\s*$/)?(n.executeSql("intentional failure used to rollback transaction"),e.success()):n.executeSql(s,[],o,u)}else n.executeSql("intentional failure used to rollback transaction"),e.success()},u=function(t,n){return n.message!="not an error"?e.error(n.message):e.success(),!0};s?n.executeSql(s,[],o,u):e.success()})):e.error("SQLite (WebSQL) not available in your browser. Try either using a webkit-based browser (such as Safari or Chrome) or using the SQLite (SQL.js) database type.")}catch(n){e.error(n)}},window.WebSQL_driver.prototype.executeQuery=function(e){var t=this;try{if(t.db==null)throw"You need to build the schema before you can run a query.";var n=[];t.db.transaction(function(r){var i=function(o,u){var a={SUCCEEDED:!0,EXECUTIONTIME:new Date-h,RESULTS:{COLUMNS:[],DATA:[]},EXECUTIONPLAN:{COLUMNS:[],DATA:[]}};for(var p=0;p<u.rows.length;p++){var d=[],v=u.rows.item(p);if(p==0)for(col in v)a.RESULTS.COLUMNS.push(col);for(var m=0;m<a.RESULTS.COLUMNS.length;m++)d.push(v[a.RESULTS.COLUMNS[m]]);a.RESULTS.DATA.push(d)}r.executeSql("EXPLAIN QUERY PLAN "+c,[],function(o,u){for(var h=0;h<u.rows.length;h++){var p=[],d=u.rows.item(h);if(h==0)for(col in d)a.EXECUTIONPLAN.COLUMNS.push(col);for(var v=0;v<a.EXECUTIONPLAN.COLUMNS.length;v++)p.push(d[a.EXECUTIONPLAN.COLUMNS[v]]);a.EXECUTIONPLAN.DATA.push(p)}l>t.ddl.length-1&&n.push(a);if(l<f.length-1){do l++,c=f[l];while(l<f.length-1&&c.match(/^\s*$/));c.match(/^\s*$/)?(r.executeSql("intentional failure used to rollback transaction"),e.success(n)):r.executeSql(c,[],i,s)}else r.executeSql("intentional failure used to rollback transaction"),e.success(n)},function(o,u){l>t.ddl.length-1&&n.push(a);if(l<f.length-1){do l++,c=f[l];while(l<f.length-1&&c.match(/^\s*$/));c.match(/^\s*$/)?(r.executeSql("intentional failure used to rollback transaction"),e.success(n)):r.executeSql(c,[],i,s)}else r.executeSql("intentional failure used to rollback transaction"),e.success(n)})},s=function(t,r){if(r.message!="not an error"){var i={SUCCEEDED:!1,EXECUTIONTIME:new Date-h,ERRORMESSAGE:r.message};n.push(i)}return e.success(n),!0},o=[],u,a=!1,f=t.ddl.slice(0);$.each(t.splitStatement(e.sql,e.statement_separator),function(e,t){f.push(t)});var l=0,c=f[l],h=new Date;r.executeSql(c,[],i,s)})}catch(r){e.error(r)}}